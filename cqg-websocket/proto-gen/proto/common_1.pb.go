// CQG common messages in API Protocols
//
// Last changes were made on 29 Sep 2019
// Version 1.37

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.6.1
// source: proto/common_1.proto

package protogen

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Operation result enum.
type OperationStatus int32

const (
	// Successful result.
	OperationStatus_SUCCESS OperationStatus = 1
	// Failed result.
	OperationStatus_FAILURE OperationStatus = 2
)

// Enum value maps for OperationStatus.
var (
	OperationStatus_name = map[int32]string{
		1: "SUCCESS",
		2: "FAILURE",
	}
	OperationStatus_value = map[string]int32{
		"SUCCESS": 1,
		"FAILURE": 2,
	}
)

func (x OperationStatus) Enum() *OperationStatus {
	p := new(OperationStatus)
	*p = x
	return p
}

func (x OperationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[0].Descriptor()
}

func (OperationStatus) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[0]
}

func (x OperationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OperationStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OperationStatus(num)
	return nil
}

// Deprecated: Use OperationStatus.Descriptor instead.
func (OperationStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{0}
}

// Domain of the login information
type LoginDomain int32

const (
	// CQG Gateway login domain.
	LoginDomain_CQG_TRADE_ROUTING LoginDomain = 2
	// CQG System (IC, QTrader, etc.) login domain.
	LoginDomain_CQG_SYSTEM LoginDomain = 3
	// CQG Admin (CMS, CAST, CAST2) login domain.
	LoginDomain_CQG_ADMIN LoginDomain = 4
)

// Enum value maps for LoginDomain.
var (
	LoginDomain_name = map[int32]string{
		2: "CQG_TRADE_ROUTING",
		3: "CQG_SYSTEM",
		4: "CQG_ADMIN",
	}
	LoginDomain_value = map[string]int32{
		"CQG_TRADE_ROUTING": 2,
		"CQG_SYSTEM":        3,
		"CQG_ADMIN":         4,
	}
)

func (x LoginDomain) Enum() *LoginDomain {
	p := new(LoginDomain)
	*p = x
	return p
}

func (x LoginDomain) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginDomain) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[1].Descriptor()
}

func (LoginDomain) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[1]
}

func (x LoginDomain) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LoginDomain) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LoginDomain(num)
	return nil
}

// Deprecated: Use LoginDomain.Descriptor instead.
func (LoginDomain) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{1}
}

// Types of common lookup properties.
type CommonLookupPropertyType int32

const (
	CommonLookupPropertyType_AUTHENTICATION_SYSTEM CommonLookupPropertyType = 201
	CommonLookupPropertyType_CONNECTION_POINT      CommonLookupPropertyType = 202
	CommonLookupPropertyType_EXCHANGE              CommonLookupPropertyType = 203
)

// Enum value maps for CommonLookupPropertyType.
var (
	CommonLookupPropertyType_name = map[int32]string{
		201: "AUTHENTICATION_SYSTEM",
		202: "CONNECTION_POINT",
		203: "EXCHANGE",
	}
	CommonLookupPropertyType_value = map[string]int32{
		"AUTHENTICATION_SYSTEM": 201,
		"CONNECTION_POINT":      202,
		"EXCHANGE":              203,
	}
)

func (x CommonLookupPropertyType) Enum() *CommonLookupPropertyType {
	p := new(CommonLookupPropertyType)
	*p = x
	return p
}

func (x CommonLookupPropertyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonLookupPropertyType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[2].Descriptor()
}

func (CommonLookupPropertyType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[2]
}

func (x CommonLookupPropertyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CommonLookupPropertyType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CommonLookupPropertyType(num)
	return nil
}

// Deprecated: Use CommonLookupPropertyType.Descriptor instead.
func (CommonLookupPropertyType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{2}
}

// List of allowed AuthServer special service operations.
type AuthServerSpecialOperation int32

const (
	// Set static password without providing old static password.
	AuthServerSpecialOperation_SET_PASSWORD AuthServerSpecialOperation = 1
	// Setup new second factor regardless if it is set already.
	AuthServerSpecialOperation_SETUP_SECOND_FACTOR AuthServerSpecialOperation = 2
	// Change expired static password.
	AuthServerSpecialOperation_CHANGE_EXPIRED_PASSWORD AuthServerSpecialOperation = 3
	// Sign agreement(s).
	AuthServerSpecialOperation_SIGN_AGREEMENT AuthServerSpecialOperation = 4
)

// Enum value maps for AuthServerSpecialOperation.
var (
	AuthServerSpecialOperation_name = map[int32]string{
		1: "SET_PASSWORD",
		2: "SETUP_SECOND_FACTOR",
		3: "CHANGE_EXPIRED_PASSWORD",
		4: "SIGN_AGREEMENT",
	}
	AuthServerSpecialOperation_value = map[string]int32{
		"SET_PASSWORD":            1,
		"SETUP_SECOND_FACTOR":     2,
		"CHANGE_EXPIRED_PASSWORD": 3,
		"SIGN_AGREEMENT":          4,
	}
)

func (x AuthServerSpecialOperation) Enum() *AuthServerSpecialOperation {
	p := new(AuthServerSpecialOperation)
	*p = x
	return p
}

func (x AuthServerSpecialOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthServerSpecialOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[3].Descriptor()
}

func (AuthServerSpecialOperation) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[3]
}

func (x AuthServerSpecialOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AuthServerSpecialOperation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AuthServerSpecialOperation(num)
	return nil
}

// Deprecated: Use AuthServerSpecialOperation.Descriptor instead.
func (AuthServerSpecialOperation) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{3}
}

// List of credential types.
type CredentialType int32

const (
	CredentialType_STATIC_PASSWORD CredentialType = 1
	CredentialType_SECOND_FACTOR   CredentialType = 2
)

// Enum value maps for CredentialType.
var (
	CredentialType_name = map[int32]string{
		1: "STATIC_PASSWORD",
		2: "SECOND_FACTOR",
	}
	CredentialType_value = map[string]int32{
		"STATIC_PASSWORD": 1,
		"SECOND_FACTOR":   2,
	}
)

func (x CredentialType) Enum() *CredentialType {
	p := new(CredentialType)
	*p = x
	return p
}

func (x CredentialType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CredentialType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[4].Descriptor()
}

func (CredentialType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[4]
}

func (x CredentialType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CredentialType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CredentialType(num)
	return nil
}

// Deprecated: Use CredentialType.Descriptor instead.
func (CredentialType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{4}
}

// List of possible entities.
type EntityType int32

const (
	EntityType_ACCOUNT  EntityType = 1
	EntityType_ORDER    EntityType = 2
	EntityType_USER     EntityType = 3
	EntityType_CUSTOMER EntityType = 4
)

// Enum value maps for EntityType.
var (
	EntityType_name = map[int32]string{
		1: "ACCOUNT",
		2: "ORDER",
		3: "USER",
		4: "CUSTOMER",
	}
	EntityType_value = map[string]int32{
		"ACCOUNT":  1,
		"ORDER":    2,
		"USER":     3,
		"CUSTOMER": 4,
	}
)

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}

func (x EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[5].Descriptor()
}

func (EntityType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[5]
}

func (x EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EntityType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EntityType(num)
	return nil
}

// Deprecated: Use EntityType.Descriptor instead.
func (EntityType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{5}
}

type LogonResultCode int32

const (
	//// success codes
	// User is logged in to the system.
	LogonResultCode_LOGON_SUCCESS LogonResultCode = 0
	//// failure codes (100+)
	// General failure.
	LogonResultCode_LOGON_FAILURE LogonResultCode = 101
	// One-time password is required for this user but it was not sent, repeat logon
	// with one-time password.
	LogonResultCode_NO_ONETIME_PASSWORD LogonResultCode = 103
	// User password is expired, only change password operation is allowed.
	LogonResultCode_PASSWORD_EXPIRED LogonResultCode = 104
	// The negotiation rules for LogonRoutineClient have been violated, e.g. user has specified several fields at once in one message.
	LogonResultCode_ROUTINE_ERROR LogonResultCode = 105
	// Some fields in LogonInit have wrong values.
	LogonResultCode_WRONG_PARAMETERS LogonResultCode = 106
	// User has been locked out by the system.
	LogonResultCode_USER_AUTO_LOCKOUT LogonResultCode = 107
	// User has been locked out by admins.
	LogonResultCode_USER_MANUAL_LOCKOUT LogonResultCode = 108
	// Second factor authentication is required from this user, but it is not initialised, initialize and repeat logon
	LogonResultCode_SECOND_FACTOR_INIT_REQUIRED LogonResultCode = 109
	// Client application version isn't supported, the client application must be upgraded.
	LogonResultCode_INCOMPATIBLE_CLIENT LogonResultCode = 110
	// There is unsigned/rejected agreement(s) that denies logon.
	LogonResultCode_UNSIGNED_AGREEMENT LogonResultCode = 111
)

// Enum value maps for LogonResultCode.
var (
	LogonResultCode_name = map[int32]string{
		0:   "LOGON_SUCCESS",
		101: "LOGON_FAILURE",
		103: "NO_ONETIME_PASSWORD",
		104: "PASSWORD_EXPIRED",
		105: "ROUTINE_ERROR",
		106: "WRONG_PARAMETERS",
		107: "USER_AUTO_LOCKOUT",
		108: "USER_MANUAL_LOCKOUT",
		109: "SECOND_FACTOR_INIT_REQUIRED",
		110: "INCOMPATIBLE_CLIENT",
		111: "UNSIGNED_AGREEMENT",
	}
	LogonResultCode_value = map[string]int32{
		"LOGON_SUCCESS":               0,
		"LOGON_FAILURE":               101,
		"NO_ONETIME_PASSWORD":         103,
		"PASSWORD_EXPIRED":            104,
		"ROUTINE_ERROR":               105,
		"WRONG_PARAMETERS":            106,
		"USER_AUTO_LOCKOUT":           107,
		"USER_MANUAL_LOCKOUT":         108,
		"SECOND_FACTOR_INIT_REQUIRED": 109,
		"INCOMPATIBLE_CLIENT":         110,
		"UNSIGNED_AGREEMENT":          111,
	}
)

func (x LogonResultCode) Enum() *LogonResultCode {
	p := new(LogonResultCode)
	*p = x
	return p
}

func (x LogonResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogonResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[6].Descriptor()
}

func (LogonResultCode) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[6]
}

func (x LogonResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LogonResultCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LogonResultCode(num)
	return nil
}

// Deprecated: Use LogonResultCode.Descriptor instead.
func (LogonResultCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{6}
}

// Represents admin login scope.
type AdminLoginScope int32

const (
	AdminLoginScope_CQG       AdminLoginScope = 1
	AdminLoginScope_BROKERAGE AdminLoginScope = 2
	AdminLoginScope_SALES_REP AdminLoginScope = 3
)

// Enum value maps for AdminLoginScope.
var (
	AdminLoginScope_name = map[int32]string{
		1: "CQG",
		2: "BROKERAGE",
		3: "SALES_REP",
	}
	AdminLoginScope_value = map[string]int32{
		"CQG":       1,
		"BROKERAGE": 2,
		"SALES_REP": 3,
	}
)

func (x AdminLoginScope) Enum() *AdminLoginScope {
	p := new(AdminLoginScope)
	*p = x
	return p
}

func (x AdminLoginScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminLoginScope) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[7].Descriptor()
}

func (AdminLoginScope) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[7]
}

func (x AdminLoginScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AdminLoginScope) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AdminLoginScope(num)
	return nil
}

// Deprecated: Use AdminLoginScope.Descriptor instead.
func (AdminLoginScope) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{7}
}

// Authentication activity types.
type AuthActivityType int32

const (
	// Login.
	AuthActivityType_LOGIN AuthActivityType = 1
	// Password change.
	AuthActivityType_PASSWORD_CHANGE AuthActivityType = 2
	// Clear lockout (from CAST).
	AuthActivityType_CLEAR_LOCKOUT AuthActivityType = 3
	// Change 2FA
	AuthActivityType_CHANGE_2FA AuthActivityType = 4
	// Erase 2FA
	AuthActivityType_ERASE_2FA AuthActivityType = 5
	// Erase password
	AuthActivityType_ERASE_PASSWORD AuthActivityType = 6
)

// Enum value maps for AuthActivityType.
var (
	AuthActivityType_name = map[int32]string{
		1: "LOGIN",
		2: "PASSWORD_CHANGE",
		3: "CLEAR_LOCKOUT",
		4: "CHANGE_2FA",
		5: "ERASE_2FA",
		6: "ERASE_PASSWORD",
	}
	AuthActivityType_value = map[string]int32{
		"LOGIN":           1,
		"PASSWORD_CHANGE": 2,
		"CLEAR_LOCKOUT":   3,
		"CHANGE_2FA":      4,
		"ERASE_2FA":       5,
		"ERASE_PASSWORD":  6,
	}
)

func (x AuthActivityType) Enum() *AuthActivityType {
	p := new(AuthActivityType)
	*p = x
	return p
}

func (x AuthActivityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthActivityType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[8].Descriptor()
}

func (AuthActivityType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[8]
}

func (x AuthActivityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AuthActivityType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AuthActivityType(num)
	return nil
}

// Deprecated: Use AuthActivityType.Descriptor instead.
func (AuthActivityType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{8}
}

// Type of the message.
type UserMessage_MessageType int32

const (
	// Critical error message.
	UserMessage_CRITICAL_ERROR UserMessage_MessageType = 1
	// Warning.
	UserMessage_WARNING UserMessage_MessageType = 2
	// General information.
	UserMessage_INFO UserMessage_MessageType = 3
	// This message shouldn't be visible for users, only dumped into a log file.
	UserMessage_LOG UserMessage_MessageType = 4
)

// Enum value maps for UserMessage_MessageType.
var (
	UserMessage_MessageType_name = map[int32]string{
		1: "CRITICAL_ERROR",
		2: "WARNING",
		3: "INFO",
		4: "LOG",
	}
	UserMessage_MessageType_value = map[string]int32{
		"CRITICAL_ERROR": 1,
		"WARNING":        2,
		"INFO":           3,
		"LOG":            4,
	}
)

func (x UserMessage_MessageType) Enum() *UserMessage_MessageType {
	p := new(UserMessage_MessageType)
	*p = x
	return p
}

func (x UserMessage_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserMessage_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[9].Descriptor()
}

func (UserMessage_MessageType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[9]
}

func (x UserMessage_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UserMessage_MessageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UserMessage_MessageType(num)
	return nil
}

// Deprecated: Use UserMessage_MessageType.Descriptor instead.
func (UserMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{1, 0}
}

// Session settings for additional functionality.
type Logon_SessionSetting int32

const (
	// Allows restoring session in case of an accidental disconnect (see RestoreOrJoinSession message).
	// If the setting is not specified then termination of the last connection also terminates the session without ability to restore it.
	// For security reasons clients should not specify this setting without using the restore session functionality.
	Logon_ALLOW_SESSION_RESTORE Logon_SessionSetting = 1
	// Allows other new connections to join the session (see RestoreOrJoinSession message) and work concurrently.
	// If the setting is not specified then the session can have only one connection at each moment and a new connection pushes the old one out (if the session restore is allowed).
	// For security reasons clients should not specify this setting without using join session functionality.
	Logon_ALLOW_SESSION_JOIN Logon_SessionSetting = 2
)

// Enum value maps for Logon_SessionSetting.
var (
	Logon_SessionSetting_name = map[int32]string{
		1: "ALLOW_SESSION_RESTORE",
		2: "ALLOW_SESSION_JOIN",
	}
	Logon_SessionSetting_value = map[string]int32{
		"ALLOW_SESSION_RESTORE": 1,
		"ALLOW_SESSION_JOIN":    2,
	}
)

func (x Logon_SessionSetting) Enum() *Logon_SessionSetting {
	p := new(Logon_SessionSetting)
	*p = x
	return p
}

func (x Logon_SessionSetting) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Logon_SessionSetting) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[10].Descriptor()
}

func (Logon_SessionSetting) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[10]
}

func (x Logon_SessionSetting) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Logon_SessionSetting) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Logon_SessionSetting(num)
	return nil
}

// Deprecated: Use Logon_SessionSetting.Descriptor instead.
func (Logon_SessionSetting) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{2, 0}
}

// Service authorization type.
type EntitlementService_AuthorizationType int32

const (
	EntitlementService_DISABLE_ONLY EntitlementService_AuthorizationType = 1
	EntitlementService_VIEW_ONLY    EntitlementService_AuthorizationType = 2
	EntitlementService_ENABLE_ONLY  EntitlementService_AuthorizationType = 3
	EntitlementService_FULL_CONTROL EntitlementService_AuthorizationType = 4
)

// Enum value maps for EntitlementService_AuthorizationType.
var (
	EntitlementService_AuthorizationType_name = map[int32]string{
		1: "DISABLE_ONLY",
		2: "VIEW_ONLY",
		3: "ENABLE_ONLY",
		4: "FULL_CONTROL",
	}
	EntitlementService_AuthorizationType_value = map[string]int32{
		"DISABLE_ONLY": 1,
		"VIEW_ONLY":    2,
		"ENABLE_ONLY":  3,
		"FULL_CONTROL": 4,
	}
)

func (x EntitlementService_AuthorizationType) Enum() *EntitlementService_AuthorizationType {
	p := new(EntitlementService_AuthorizationType)
	*p = x
	return p
}

func (x EntitlementService_AuthorizationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntitlementService_AuthorizationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[11].Descriptor()
}

func (EntitlementService_AuthorizationType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[11]
}

func (x EntitlementService_AuthorizationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EntitlementService_AuthorizationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EntitlementService_AuthorizationType(num)
	return nil
}

// Deprecated: Use EntitlementService_AuthorizationType.Descriptor instead.
func (EntitlementService_AuthorizationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{15, 0}
}

// Special service options.
type EntitlementService_ServiceOption int32

const (
	EntitlementService_ONLY_FOR_TRADERS EntitlementService_ServiceOption = 1
	EntitlementService_FREE_FOR_TRADERS EntitlementService_ServiceOption = 2
)

// Enum value maps for EntitlementService_ServiceOption.
var (
	EntitlementService_ServiceOption_name = map[int32]string{
		1: "ONLY_FOR_TRADERS",
		2: "FREE_FOR_TRADERS",
	}
	EntitlementService_ServiceOption_value = map[string]int32{
		"ONLY_FOR_TRADERS": 1,
		"FREE_FOR_TRADERS": 2,
	}
)

func (x EntitlementService_ServiceOption) Enum() *EntitlementService_ServiceOption {
	p := new(EntitlementService_ServiceOption)
	*p = x
	return p
}

func (x EntitlementService_ServiceOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntitlementService_ServiceOption) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[12].Descriptor()
}

func (EntitlementService_ServiceOption) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[12]
}

func (x EntitlementService_ServiceOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EntitlementService_ServiceOption) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EntitlementService_ServiceOption(num)
	return nil
}

// Deprecated: Use EntitlementService_ServiceOption.Descriptor instead.
func (EntitlementService_ServiceOption) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{15, 1}
}

// Constraint type.
type EntitlementConstraint_Type int32

const (
	// The services in the constraint are mutually exclusive.
	EntitlementConstraint_EXCLUDE EntitlementConstraint_Type = 1
	// Warning constraints are used where two services would normally not be allowed together
	// because one is a subset of the other, but we can't use the exclude constraint because
	// we need to allow the user to try out a version of the more extensive service.
	EntitlementConstraint_WARNING EntitlementConstraint_Type = 2
	// One of the services is mandatory within constraint group but only one service
	// from the group can be selected at the same time (if enforced for this user).
	EntitlementConstraint_MANDATORY_ONLY_ONE EntitlementConstraint_Type = 3
	// Only one service from the group can be selected at the same time.
	EntitlementConstraint_PICK_ONE EntitlementConstraint_Type = 4
	// Only service in whitelist works with particular product service.
	EntitlementConstraint_PRODUCT_WHITELIST EntitlementConstraint_Type = 5
)

// Enum value maps for EntitlementConstraint_Type.
var (
	EntitlementConstraint_Type_name = map[int32]string{
		1: "EXCLUDE",
		2: "WARNING",
		3: "MANDATORY_ONLY_ONE",
		4: "PICK_ONE",
		5: "PRODUCT_WHITELIST",
	}
	EntitlementConstraint_Type_value = map[string]int32{
		"EXCLUDE":            1,
		"WARNING":            2,
		"MANDATORY_ONLY_ONE": 3,
		"PICK_ONE":           4,
		"PRODUCT_WHITELIST":  5,
	}
)

func (x EntitlementConstraint_Type) Enum() *EntitlementConstraint_Type {
	p := new(EntitlementConstraint_Type)
	*p = x
	return p
}

func (x EntitlementConstraint_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntitlementConstraint_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[13].Descriptor()
}

func (EntitlementConstraint_Type) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[13]
}

func (x EntitlementConstraint_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EntitlementConstraint_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EntitlementConstraint_Type(num)
	return nil
}

// Deprecated: Use EntitlementConstraint_Type.Descriptor instead.
func (EntitlementConstraint_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{20, 0}
}

// Subscriber Type.
type User_SubscriberType int32

const (
	// Professional subscriber.
	User_PRO User_SubscriberType = 0
	// Non-professional subscriber.
	User_NON_PRO User_SubscriberType = 1
)

// Enum value maps for User_SubscriberType.
var (
	User_SubscriberType_name = map[int32]string{
		0: "PRO",
		1: "NON_PRO",
	}
	User_SubscriberType_value = map[string]int32{
		"PRO":     0,
		"NON_PRO": 1,
	}
)

func (x User_SubscriberType) Enum() *User_SubscriberType {
	p := new(User_SubscriberType)
	*p = x
	return p
}

func (x User_SubscriberType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_SubscriberType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[14].Descriptor()
}

func (User_SubscriberType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[14]
}

func (x User_SubscriberType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *User_SubscriberType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = User_SubscriberType(num)
	return nil
}

// Deprecated: Use User_SubscriberType.Descriptor instead.
func (User_SubscriberType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{22, 0}
}

// Defines classes of login.
type User_LoginClass int32

const (
	// Regular login for trading.
	User_REGULAR User_LoginClass = 1
	// Fix direct access login.
	User_FIX_DIRECT User_LoginClass = 2
	// Order handler login.
	User_ORDER_HANDLER User_LoginClass = 3
	// Template login for cloning only.
	User_TEMPLATE User_LoginClass = 4
)

// Enum value maps for User_LoginClass.
var (
	User_LoginClass_name = map[int32]string{
		1: "REGULAR",
		2: "FIX_DIRECT",
		3: "ORDER_HANDLER",
		4: "TEMPLATE",
	}
	User_LoginClass_value = map[string]int32{
		"REGULAR":       1,
		"FIX_DIRECT":    2,
		"ORDER_HANDLER": 3,
		"TEMPLATE":      4,
	}
)

func (x User_LoginClass) Enum() *User_LoginClass {
	p := new(User_LoginClass)
	*p = x
	return p
}

func (x User_LoginClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_LoginClass) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[15].Descriptor()
}

func (User_LoginClass) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[15]
}

func (x User_LoginClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *User_LoginClass) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = User_LoginClass(num)
	return nil
}

// Deprecated: Use User_LoginClass.Descriptor instead.
func (User_LoginClass) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{22, 1}
}

// List of possible search refine criteria.
type UserSearchRequest_SearchCriteria int32

const (
	// Search by user_id.
	// With 'CONTAINS' rule, minimal query text length is limited with 3 symbols.
	UserSearchRequest_USER_ID UserSearchRequest_SearchCriteria = 1
	// Search by user name.
	// With 'CONTAINS' rule, minimal query text length is limited with 3 symbols.
	UserSearchRequest_USER_NAME UserSearchRequest_SearchCriteria = 4
	// Search by sales series number.
	UserSearchRequest_SALES_SERIES_NUMBER UserSearchRequest_SearchCriteria = 5
	// Search by sales series name.
	UserSearchRequest_SALES_SERIES_NAME UserSearchRequest_SearchCriteria = 6
	// Search by sales series ID.
	UserSearchRequest_SALES_SERIES_ID UserSearchRequest_SearchCriteria = 7
	// Search by customer ID for all linked users.
	// With 'CONTAINS' rule, minimal query text length is limited with 3 symbols.
	// In case of system logins, only EXACT_EQUALITY rule is used, regardless provided rule in request.
	UserSearchRequest_CUSTOMER_ID UserSearchRequest_SearchCriteria = 8
	// Search by authorized brokerage id.
	UserSearchRequest_BROKERAGE_ID UserSearchRequest_SearchCriteria = 9
	// Search by authorized brokerage name.
	UserSearchRequest_BROKERAGE_NAME UserSearchRequest_SearchCriteria = 10
	// Login class.
	// Applicable only for trade routing domain.
	// This field is associated with User.LoginClass enum type.
	// LIMITED USE: Only explicitly, one per search option with EXACT_EQUALITY rule and in all match mode.
	UserSearchRequest_CLASS UserSearchRequest_SearchCriteria = 11
	// Login domain.
	// This field is associated with LoginDomain enum type.
	// LIMITED USE: Only explicitly, one per search option with EXACT_EQUALITY rule and in all match mode.
	UserSearchRequest_LOGIN_DOMAIN UserSearchRequest_SearchCriteria = 12
)

// Enum value maps for UserSearchRequest_SearchCriteria.
var (
	UserSearchRequest_SearchCriteria_name = map[int32]string{
		1:  "USER_ID",
		4:  "USER_NAME",
		5:  "SALES_SERIES_NUMBER",
		6:  "SALES_SERIES_NAME",
		7:  "SALES_SERIES_ID",
		8:  "CUSTOMER_ID",
		9:  "BROKERAGE_ID",
		10: "BROKERAGE_NAME",
		11: "CLASS",
		12: "LOGIN_DOMAIN",
	}
	UserSearchRequest_SearchCriteria_value = map[string]int32{
		"USER_ID":             1,
		"USER_NAME":           4,
		"SALES_SERIES_NUMBER": 5,
		"SALES_SERIES_NAME":   6,
		"SALES_SERIES_ID":     7,
		"CUSTOMER_ID":         8,
		"BROKERAGE_ID":        9,
		"BROKERAGE_NAME":      10,
		"CLASS":               11,
		"LOGIN_DOMAIN":        12,
	}
)

func (x UserSearchRequest_SearchCriteria) Enum() *UserSearchRequest_SearchCriteria {
	p := new(UserSearchRequest_SearchCriteria)
	*p = x
	return p
}

func (x UserSearchRequest_SearchCriteria) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSearchRequest_SearchCriteria) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[16].Descriptor()
}

func (UserSearchRequest_SearchCriteria) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[16]
}

func (x UserSearchRequest_SearchCriteria) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *UserSearchRequest_SearchCriteria) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = UserSearchRequest_SearchCriteria(num)
	return nil
}

// Deprecated: Use UserSearchRequest_SearchCriteria.Descriptor instead.
func (UserSearchRequest_SearchCriteria) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{26, 0}
}

// List of possible validation statuses of an address.
type Address_AddressStatus int32

const (
	Address_INVALID       Address_AddressStatus = 0
	Address_VALID         Address_AddressStatus = 1
	Address_NO_VALIDATION Address_AddressStatus = 2
	Address_NEW           Address_AddressStatus = 3
)

// Enum value maps for Address_AddressStatus.
var (
	Address_AddressStatus_name = map[int32]string{
		0: "INVALID",
		1: "VALID",
		2: "NO_VALIDATION",
		3: "NEW",
	}
	Address_AddressStatus_value = map[string]int32{
		"INVALID":       0,
		"VALID":         1,
		"NO_VALIDATION": 2,
		"NEW":           3,
	}
)

func (x Address_AddressStatus) Enum() *Address_AddressStatus {
	p := new(Address_AddressStatus)
	*p = x
	return p
}

func (x Address_AddressStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Address_AddressStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[17].Descriptor()
}

func (Address_AddressStatus) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[17]
}

func (x Address_AddressStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Address_AddressStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Address_AddressStatus(num)
	return nil
}

// Deprecated: Use Address_AddressStatus.Descriptor instead.
func (Address_AddressStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{30, 0}
}

// List of possible customer legal types.
type Customer_LegalType int32

const (
	// Individual.
	Customer_INDIVIDUAL Customer_LegalType = 1
	// Joint-stock company.
	Customer_JOINT Customer_LegalType = 2
	// Limited partnership.
	Customer_LIMITED Customer_LegalType = 3
	// Trust company.
	Customer_TRUST Customer_LegalType = 4
	// Corporate group.
	Customer_CORPORATE Customer_LegalType = 5
	// General partnership.
	Customer_PARTNERSHIP Customer_LegalType = 6
)

// Enum value maps for Customer_LegalType.
var (
	Customer_LegalType_name = map[int32]string{
		1: "INDIVIDUAL",
		2: "JOINT",
		3: "LIMITED",
		4: "TRUST",
		5: "CORPORATE",
		6: "PARTNERSHIP",
	}
	Customer_LegalType_value = map[string]int32{
		"INDIVIDUAL":  1,
		"JOINT":       2,
		"LIMITED":     3,
		"TRUST":       4,
		"CORPORATE":   5,
		"PARTNERSHIP": 6,
	}
)

func (x Customer_LegalType) Enum() *Customer_LegalType {
	p := new(Customer_LegalType)
	*p = x
	return p
}

func (x Customer_LegalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Customer_LegalType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[18].Descriptor()
}

func (Customer_LegalType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[18]
}

func (x Customer_LegalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Customer_LegalType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Customer_LegalType(num)
	return nil
}

// Deprecated: Use Customer_LegalType.Descriptor instead.
func (Customer_LegalType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{35, 0}
}

type Customer_ProfileType int32

const (
	Customer_CUSTOMER   Customer_ProfileType = 1
	Customer_ADMIN      Customer_ProfileType = 2
	Customer_BROKERAGE  Customer_ProfileType = 3
	Customer_SUBSCRIBER Customer_ProfileType = 4
)

// Enum value maps for Customer_ProfileType.
var (
	Customer_ProfileType_name = map[int32]string{
		1: "CUSTOMER",
		2: "ADMIN",
		3: "BROKERAGE",
		4: "SUBSCRIBER",
	}
	Customer_ProfileType_value = map[string]int32{
		"CUSTOMER":   1,
		"ADMIN":      2,
		"BROKERAGE":  3,
		"SUBSCRIBER": 4,
	}
)

func (x Customer_ProfileType) Enum() *Customer_ProfileType {
	p := new(Customer_ProfileType)
	*p = x
	return p
}

func (x Customer_ProfileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Customer_ProfileType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[19].Descriptor()
}

func (Customer_ProfileType) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[19]
}

func (x Customer_ProfileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Customer_ProfileType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Customer_ProfileType(num)
	return nil
}

// Deprecated: Use Customer_ProfileType.Descriptor instead.
func (Customer_ProfileType) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{35, 1}
}

// List of possible search refine criteria.
type CustomerSearchRequest_SearchCriteria int32

const (
	// Search by customer id.
	CustomerSearchRequest_ID CustomerSearchRequest_SearchCriteria = 1
	// Search by customer name.
	CustomerSearchRequest_NAME CustomerSearchRequest_SearchCriteria = 2
	// Search by first name.
	CustomerSearchRequest_FIRST_NAME CustomerSearchRequest_SearchCriteria = 3
	// Search by last name.
	CustomerSearchRequest_LAST_NAME CustomerSearchRequest_SearchCriteria = 4
	// Search by brokerage id.
	CustomerSearchRequest_BROKERAGE_ID CustomerSearchRequest_SearchCriteria = 5
)

// Enum value maps for CustomerSearchRequest_SearchCriteria.
var (
	CustomerSearchRequest_SearchCriteria_name = map[int32]string{
		1: "ID",
		2: "NAME",
		3: "FIRST_NAME",
		4: "LAST_NAME",
		5: "BROKERAGE_ID",
	}
	CustomerSearchRequest_SearchCriteria_value = map[string]int32{
		"ID":           1,
		"NAME":         2,
		"FIRST_NAME":   3,
		"LAST_NAME":    4,
		"BROKERAGE_ID": 5,
	}
)

func (x CustomerSearchRequest_SearchCriteria) Enum() *CustomerSearchRequest_SearchCriteria {
	p := new(CustomerSearchRequest_SearchCriteria)
	*p = x
	return p
}

func (x CustomerSearchRequest_SearchCriteria) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomerSearchRequest_SearchCriteria) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[20].Descriptor()
}

func (CustomerSearchRequest_SearchCriteria) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[20]
}

func (x CustomerSearchRequest_SearchCriteria) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CustomerSearchRequest_SearchCriteria) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CustomerSearchRequest_SearchCriteria(num)
	return nil
}

// Deprecated: Use CustomerSearchRequest_SearchCriteria.Descriptor instead.
func (CustomerSearchRequest_SearchCriteria) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{36, 0}
}

// List of possible search refine criteria.
type SalesSeriesSearchRequest_SearchCriteria int32

const (
	// Search by sales series ID.
	SalesSeriesSearchRequest_ID SalesSeriesSearchRequest_SearchCriteria = 1
	// Search by sales series number.
	SalesSeriesSearchRequest_NUMBER SalesSeriesSearchRequest_SearchCriteria = 2
	// Search by sales series name.
	SalesSeriesSearchRequest_NAME SalesSeriesSearchRequest_SearchCriteria = 3
	// Search by brokerage id.
	SalesSeriesSearchRequest_BROKERAGE_ID SalesSeriesSearchRequest_SearchCriteria = 4
)

// Enum value maps for SalesSeriesSearchRequest_SearchCriteria.
var (
	SalesSeriesSearchRequest_SearchCriteria_name = map[int32]string{
		1: "ID",
		2: "NUMBER",
		3: "NAME",
		4: "BROKERAGE_ID",
	}
	SalesSeriesSearchRequest_SearchCriteria_value = map[string]int32{
		"ID":           1,
		"NUMBER":       2,
		"NAME":         3,
		"BROKERAGE_ID": 4,
	}
)

func (x SalesSeriesSearchRequest_SearchCriteria) Enum() *SalesSeriesSearchRequest_SearchCriteria {
	p := new(SalesSeriesSearchRequest_SearchCriteria)
	*p = x
	return p
}

func (x SalesSeriesSearchRequest_SearchCriteria) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SalesSeriesSearchRequest_SearchCriteria) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[21].Descriptor()
}

func (SalesSeriesSearchRequest_SearchCriteria) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[21]
}

func (x SalesSeriesSearchRequest_SearchCriteria) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SalesSeriesSearchRequest_SearchCriteria) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SalesSeriesSearchRequest_SearchCriteria(num)
	return nil
}

// Deprecated: Use SalesSeriesSearchRequest_SearchCriteria.Descriptor instead.
func (SalesSeriesSearchRequest_SearchCriteria) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{64, 0}
}

type SearchOption_MatchingRule int32

const (
	SearchOption_CONTAINS       SearchOption_MatchingRule = 0
	SearchOption_STARTS_WITH    SearchOption_MatchingRule = 1
	SearchOption_ENDS_WITH      SearchOption_MatchingRule = 2
	SearchOption_EXACT_EQUALITY SearchOption_MatchingRule = 3
	// Only criteria marked as supported for this rule can be used with.
	SearchOption_IN_MATCHING_RULE SearchOption_MatchingRule = 4
)

// Enum value maps for SearchOption_MatchingRule.
var (
	SearchOption_MatchingRule_name = map[int32]string{
		0: "CONTAINS",
		1: "STARTS_WITH",
		2: "ENDS_WITH",
		3: "EXACT_EQUALITY",
		4: "IN_MATCHING_RULE",
	}
	SearchOption_MatchingRule_value = map[string]int32{
		"CONTAINS":         0,
		"STARTS_WITH":      1,
		"ENDS_WITH":        2,
		"EXACT_EQUALITY":   3,
		"IN_MATCHING_RULE": 4,
	}
)

func (x SearchOption_MatchingRule) Enum() *SearchOption_MatchingRule {
	p := new(SearchOption_MatchingRule)
	*p = x
	return p
}

func (x SearchOption_MatchingRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchOption_MatchingRule) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_common_1_proto_enumTypes[22].Descriptor()
}

func (SearchOption_MatchingRule) Type() protoreflect.EnumType {
	return &file_proto_common_1_proto_enumTypes[22]
}

func (x SearchOption_MatchingRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SearchOption_MatchingRule) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SearchOption_MatchingRule(num)
	return nil
}

// Deprecated: Use SearchOption_MatchingRule.Descriptor instead.
func (SearchOption_MatchingRule) EnumDescriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{87, 0}
}

// Text with a unique key. Possible text messages are listed in a separate document.
type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message unique key.
	Key *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	// Message text.
	Text *string `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	// Optional message format string which is sent only if a message has parameters.
	// Format is defined as a sample for localized clients to replace it with a translated version
	// and compose a message using variable parameters.
	// Format string sample: "The request is rejected because %1% limit of %2% per %3% seconds is exceeded"
	Format *string `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	// Optional list of format string parameters ordered according to the format string placeholders.
	// E.g. parameters for the sample format string above could be: ["request rate", "1000", "10"].
	// Note: float numbers are always defined in decimal format with a dot separator like "23434.34"
	// and date and time in extended ISO 8601 format as "2016-11-09 15:11:20.323" (time part is optional for
	// dates, date part is optional for time only, seconds in time part also may not have fractional part).
	// Client can convert these values to different formats if they need to.
	Param []string `protobuf:"bytes,4,rep,name=param" json:"param,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{0}
}

func (x *Text) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *Text) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *Text) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *Text) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

// Message from server.
type UserMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is associated with MessageType enum type.
	MessageType *uint32 `protobuf:"varint,1,req,name=message_type,json=messageType" json:"message_type,omitempty"`
	// Information about source of the message.
	Source *string `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	// Message subject.
	Subject *string `protobuf:"bytes,3,opt,name=subject" json:"subject,omitempty"`
	// Message text.
	Text *Text `protobuf:"bytes,4,req,name=text" json:"text,omitempty"`
	// Optional time when this message is expired, it should be hidden from user after this time (UTC).
	ExpirationUtcTime *int64 `protobuf:"zigzag64,5,opt,name=expiration_utc_time,json=expirationUtcTime" json:"expiration_utc_time,omitempty"`
}

func (x *UserMessage) Reset() {
	*x = UserMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMessage) ProtoMessage() {}

func (x *UserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMessage.ProtoReflect.Descriptor instead.
func (*UserMessage) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{1}
}

func (x *UserMessage) GetMessageType() uint32 {
	if x != nil && x.MessageType != nil {
		return *x.MessageType
	}
	return 0
}

func (x *UserMessage) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *UserMessage) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

func (x *UserMessage) GetText() *Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *UserMessage) GetExpirationUtcTime() int64 {
	if x != nil && x.ExpirationUtcTime != nil {
		return *x.ExpirationUtcTime
	}
	return 0
}

// Logon to the system and open a new session.
type Logon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current protocol version that is used by a client. Client has to fill it with values from ProtocolVersion enum.
	ProtocolVersionMinor *uint32 `protobuf:"varint,1,req,name=protocol_version_minor,json=protocolVersionMinor" json:"protocol_version_minor,omitempty"`
	ProtocolVersionMajor *uint32 `protobuf:"varint,2,req,name=protocol_version_major,json=protocolVersionMajor" json:"protocol_version_major,omitempty"`
	// User name.
	UserName *string `protobuf:"bytes,3,req,name=user_name,json=userName" json:"user_name,omitempty"`
	// User password.
	Password *string `protobuf:"bytes,4,req,name=password" json:"password,omitempty"`
	// Identifier of a client application as assigned by CQG.
	ClientAppId *string `protobuf:"bytes,5,req,name=client_app_id,json=clientAppId" json:"client_app_id,omitempty"`
	// Version of a client application.
	ClientVersion *string `protobuf:"bytes,6,req,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	// List of settings for a new session.
	// This field is associated with SessionSetting enum type.
	SessionSettings []uint32 `protobuf:"varint,7,rep,name=session_settings,json=sessionSettings" json:"session_settings,omitempty"`
	// Optional field that indicates if possible concurrent sessions for this user should be forcedly dropped.
	// If it is set to false then Logon may fail with corresponding error message.
	// If it is omitted or set to true then concurrent sessions for this user will be dropped.
	DropConcurrentSession *bool `protobuf:"varint,8,opt,name=drop_concurrent_session,json=dropConcurrentSession" json:"drop_concurrent_session,omitempty"`
	// Private label name.
	PrivateLabel *string `protobuf:"bytes,9,opt,name=private_label,json=privateLabel" json:"private_label,omitempty"`
	// Access token from CQG auth server.
	AccessToken *string `protobuf:"bytes,10,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (x *Logon) Reset() {
	*x = Logon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logon) ProtoMessage() {}

func (x *Logon) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logon.ProtoReflect.Descriptor instead.
func (*Logon) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{2}
}

func (x *Logon) GetProtocolVersionMinor() uint32 {
	if x != nil && x.ProtocolVersionMinor != nil {
		return *x.ProtocolVersionMinor
	}
	return 0
}

func (x *Logon) GetProtocolVersionMajor() uint32 {
	if x != nil && x.ProtocolVersionMajor != nil {
		return *x.ProtocolVersionMajor
	}
	return 0
}

func (x *Logon) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *Logon) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *Logon) GetClientAppId() string {
	if x != nil && x.ClientAppId != nil {
		return *x.ClientAppId
	}
	return ""
}

func (x *Logon) GetClientVersion() string {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return ""
}

func (x *Logon) GetSessionSettings() []uint32 {
	if x != nil {
		return x.SessionSettings
	}
	return nil
}

func (x *Logon) GetDropConcurrentSession() bool {
	if x != nil && x.DropConcurrentSession != nil {
		return *x.DropConcurrentSession
	}
	return false
}

func (x *Logon) GetPrivateLabel() string {
	if x != nil && x.PrivateLabel != nil {
		return *x.PrivateLabel
	}
	return ""
}

func (x *Logon) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

// Client request to restore session because of accidental disconnect or join the same session.
// In non-trusted mode, this operation is possible only from the same IP address.
// Permissions to use this functionality is regulated by ALLOW_SESSION_RESTORE/ALLOW_SESSION_JOIN session settings
// which are specified in Logon message.
type RestoreOrJoinSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token of the session to restore or join, it has limited lifetime after disconnect.
	SessionToken *string `protobuf:"bytes,1,req,name=session_token,json=sessionToken" json:"session_token,omitempty"`
	// Identifier of the client application as assigned by CQG.
	ClientAppId *string `protobuf:"bytes,2,req,name=client_app_id,json=clientAppId" json:"client_app_id,omitempty"`
	// Can be used by trusted clients (components connected in trust mode) to specify real client IP they act on behalf of.
	ClientIpAddress *string `protobuf:"bytes,3,opt,name=client_ip_address,json=clientIpAddress" json:"client_ip_address,omitempty"`
}

func (x *RestoreOrJoinSession) Reset() {
	*x = RestoreOrJoinSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreOrJoinSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreOrJoinSession) ProtoMessage() {}

func (x *RestoreOrJoinSession) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreOrJoinSession.ProtoReflect.Descriptor instead.
func (*RestoreOrJoinSession) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{3}
}

func (x *RestoreOrJoinSession) GetSessionToken() string {
	if x != nil && x.SessionToken != nil {
		return *x.SessionToken
	}
	return ""
}

func (x *RestoreOrJoinSession) GetClientAppId() string {
	if x != nil && x.ClientAppId != nil {
		return *x.ClientAppId
	}
	return ""
}

func (x *RestoreOrJoinSession) GetClientIpAddress() string {
	if x != nil && x.ClientIpAddress != nil {
		return *x.ClientIpAddress
	}
	return ""
}

// Logoff session.
type Logoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Logoff) Reset() {
	*x = Logoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logoff) ProtoMessage() {}

func (x *Logoff) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logoff.ProtoReflect.Descriptor instead.
func (*Logoff) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{4}
}

// Request of temporary user record for demo.
// Scope of ObtainDemoAccess is limited to system logins.
type ObtainDemoAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Request identifier.
	// It should be unique to match with obtain demo access result.
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Identifier of the client application as assigned by CQG.
	ClientAppId *string `protobuf:"bytes,2,req,name=client_app_id,json=clientAppId" json:"client_app_id,omitempty"`
	// Private label identifies the Firm or Vendor that connects to the server, client_app_id field value is taken by default.
	PrivateLabel *string `protobuf:"bytes,3,opt,name=private_label,json=privateLabel" json:"private_label,omitempty"`
	// User first name (max length = 20).
	FirstName *string `protobuf:"bytes,4,req,name=first_name,json=firstName" json:"first_name,omitempty"`
	// User last name (max length = 25).
	LastName *string `protobuf:"bytes,5,req,name=last_name,json=lastName" json:"last_name,omitempty"`
	// E-mail address of a user who requested demo access.
	Email *Email `protobuf:"bytes,6,req,name=email" json:"email,omitempty"`
	// Phone of a user who requested demo access.
	Phone *Phone `protobuf:"bytes,7,req,name=phone" json:"phone,omitempty"`
	// E-mail BCC addresses to send demo mail to.
	EmailBcc []*Email `protobuf:"bytes,8,rep,name=email_bcc,json=emailBcc" json:"email_bcc,omitempty"`
	// Demo access source.
	Source *string `protobuf:"bytes,9,opt,name=source" json:"source,omitempty"`
}

func (x *ObtainDemoAccess) Reset() {
	*x = ObtainDemoAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObtainDemoAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObtainDemoAccess) ProtoMessage() {}

func (x *ObtainDemoAccess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObtainDemoAccess.ProtoReflect.Descriptor instead.
func (*ObtainDemoAccess) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{5}
}

func (x *ObtainDemoAccess) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ObtainDemoAccess) GetClientAppId() string {
	if x != nil && x.ClientAppId != nil {
		return *x.ClientAppId
	}
	return ""
}

func (x *ObtainDemoAccess) GetPrivateLabel() string {
	if x != nil && x.PrivateLabel != nil {
		return *x.PrivateLabel
	}
	return ""
}

func (x *ObtainDemoAccess) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *ObtainDemoAccess) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *ObtainDemoAccess) GetEmail() *Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *ObtainDemoAccess) GetPhone() *Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *ObtainDemoAccess) GetEmailBcc() []*Email {
	if x != nil {
		return x.EmailBcc
	}
	return nil
}

func (x *ObtainDemoAccess) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User name to login.
	UserName *string `protobuf:"bytes,1,req,name=user_name,json=userName" json:"user_name,omitempty"`
	// User password.
	Password *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{6}
}

func (x *Credentials) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *Credentials) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

// Result of demo credentials request.
// If operation succeeded then an e-mail is sent to a user with necessary credentials and instructions.
type ObtainDemoAccessResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of a corresponding request.
	RequestId *uint32 `protobuf:"varint,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Credentials of demo user.
	Credentials *Credentials `protobuf:"bytes,2,opt,name=credentials" json:"credentials,omitempty"`
	// Demo credentials expiration time.
	ExpirationUtcTime *int64 `protobuf:"zigzag64,3,opt,name=expiration_utc_time,json=expirationUtcTime" json:"expiration_utc_time,omitempty"`
	// Operation status.
	// This field is associated with OperationStatus enum.
	OperationStatus *uint32 `protobuf:"varint,4,req,name=operation_status,json=operationStatus" json:"operation_status,omitempty"`
	// Message in case of demo request failure.
	ErrorMessage *Text `protobuf:"bytes,5,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (x *ObtainDemoAccessResult) Reset() {
	*x = ObtainDemoAccessResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObtainDemoAccessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObtainDemoAccessResult) ProtoMessage() {}

func (x *ObtainDemoAccessResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObtainDemoAccessResult.ProtoReflect.Descriptor instead.
func (*ObtainDemoAccessResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{7}
}

func (x *ObtainDemoAccessResult) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *ObtainDemoAccessResult) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *ObtainDemoAccessResult) GetExpirationUtcTime() int64 {
	if x != nil && x.ExpirationUtcTime != nil {
		return *x.ExpirationUtcTime
	}
	return 0
}

func (x *ObtainDemoAccessResult) GetOperationStatus() uint32 {
	if x != nil && x.OperationStatus != nil {
		return *x.OperationStatus
	}
	return 0
}

func (x *ObtainDemoAccessResult) GetErrorMessage() *Text {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

// Result of the Logon operation.
type LogonResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current protocol version of the server. For information only.
	ProtocolVersionMinor *uint32 `protobuf:"varint,1,req,name=protocol_version_minor,json=protocolVersionMinor" json:"protocol_version_minor,omitempty"`
	ProtocolVersionMajor *uint32 `protobuf:"varint,2,req,name=protocol_version_major,json=protocolVersionMajor" json:"protocol_version_major,omitempty"`
	// Operation status.
	// This field is associated with OperationStatus enum.
	OperationStatus *uint32 `protobuf:"varint,3,req,name=operation_status,json=operationStatus" json:"operation_status,omitempty"`
	// Message in case of logon failure.
	ErrorMessage *Text `protobuf:"bytes,4,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	// Token of a new session if logon succeeded.
	SessionToken *string `protobuf:"bytes,5,opt,name=session_token,json=sessionToken" json:"session_token,omitempty"`
}

func (x *LogonResult) Reset() {
	*x = LogonResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogonResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonResult) ProtoMessage() {}

func (x *LogonResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonResult.ProtoReflect.Descriptor instead.
func (*LogonResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{8}
}

func (x *LogonResult) GetProtocolVersionMinor() uint32 {
	if x != nil && x.ProtocolVersionMinor != nil {
		return *x.ProtocolVersionMinor
	}
	return 0
}

func (x *LogonResult) GetProtocolVersionMajor() uint32 {
	if x != nil && x.ProtocolVersionMajor != nil {
		return *x.ProtocolVersionMajor
	}
	return 0
}

func (x *LogonResult) GetOperationStatus() uint32 {
	if x != nil && x.OperationStatus != nil {
		return *x.OperationStatus
	}
	return 0
}

func (x *LogonResult) GetErrorMessage() *Text {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

func (x *LogonResult) GetSessionToken() string {
	if x != nil && x.SessionToken != nil {
		return *x.SessionToken
	}
	return ""
}

// Result of session restore or join attempt.
type RestoreOrJoinSessionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is associated with OperationStatus enum.
	OperationStatus *uint32 `protobuf:"varint,1,req,name=operation_status,json=operationStatus" json:"operation_status,omitempty"`
	// Message in case of failure.
	ErrorMessage *Text `protobuf:"bytes,2,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (x *RestoreOrJoinSessionResult) Reset() {
	*x = RestoreOrJoinSessionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreOrJoinSessionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreOrJoinSessionResult) ProtoMessage() {}

func (x *RestoreOrJoinSessionResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreOrJoinSessionResult.ProtoReflect.Descriptor instead.
func (*RestoreOrJoinSessionResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{9}
}

func (x *RestoreOrJoinSessionResult) GetOperationStatus() uint32 {
	if x != nil && x.OperationStatus != nil {
		return *x.OperationStatus
	}
	return 0
}

func (x *RestoreOrJoinSessionResult) GetErrorMessage() *Text {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

// Server notification about closing user's session,
// server closes connection after this message.
type LoggedOff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logoff reason.
	Reason *Text `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
}

func (x *LoggedOff) Reset() {
	*x = LoggedOff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggedOff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggedOff) ProtoMessage() {}

func (x *LoggedOff) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggedOff.ProtoReflect.Descriptor instead.
func (*LoggedOff) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{10}
}

func (x *LoggedOff) GetReason() *Text {
	if x != nil {
		return x.Reason
	}
	return nil
}

// Request of user's entitlements.
type UserEntitlementServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User ID to request user's entitlements.
	UserId *string `protobuf:"bytes,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (x *UserEntitlementServiceRequest) Reset() {
	*x = UserEntitlementServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEntitlementServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEntitlementServiceRequest) ProtoMessage() {}

func (x *UserEntitlementServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEntitlementServiceRequest.ProtoReflect.Descriptor instead.
func (*UserEntitlementServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{11}
}

func (x *UserEntitlementServiceRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

// Request of entitlement categories.
type EntitlementCategoryListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EntitlementCategoryListRequest) Reset() {
	*x = EntitlementCategoryListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementCategoryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementCategoryListRequest) ProtoMessage() {}

func (x *EntitlementCategoryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementCategoryListRequest.ProtoReflect.Descriptor instead.
func (*EntitlementCategoryListRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{12}
}

// Request of entitlement service information.
type EntitlementServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id of the requested service.
	EntitlementServiceId *uint32 `protobuf:"varint,1,req,name=entitlement_service_id,json=entitlementServiceId" json:"entitlement_service_id,omitempty"`
}

func (x *EntitlementServiceRequest) Reset() {
	*x = EntitlementServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementServiceRequest) ProtoMessage() {}

func (x *EntitlementServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementServiceRequest.ProtoReflect.Descriptor instead.
func (*EntitlementServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{13}
}

func (x *EntitlementServiceRequest) GetEntitlementServiceId() uint32 {
	if x != nil && x.EntitlementServiceId != nil {
		return *x.EntitlementServiceId
	}
	return 0
}

// Request of entitlement service list
// available for the current session login.
type EntitlementServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional list of brokerage IDs. If it is not specified all brokerages for current session will be used.
	BrokerageId []string `protobuf:"bytes,1,rep,name=brokerage_id,json=brokerageId" json:"brokerage_id,omitempty"`
}

func (x *EntitlementServiceListRequest) Reset() {
	*x = EntitlementServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementServiceListRequest) ProtoMessage() {}

func (x *EntitlementServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementServiceListRequest.ProtoReflect.Descriptor instead.
func (*EntitlementServiceListRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{14}
}

func (x *EntitlementServiceListRequest) GetBrokerageId() []string {
	if x != nil {
		return x.BrokerageId
	}
	return nil
}

// Entitlement Service details.
type EntitlementService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier.
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Name.
	Name *Text `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	// List of assigned entitlement category IDs.
	CategoryId []uint32 `protobuf:"varint,3,rep,name=category_id,json=categoryId" json:"category_id,omitempty"`
	// Service prices.
	Price []*Price `protobuf:"bytes,4,rep,name=price" json:"price,omitempty"`
	// Description.
	Description *Text `protobuf:"bytes,5,req,name=description" json:"description,omitempty"`
	// Authorization Type.
	// This field is associated with EntitlementService.AuthorizationType enum type.
	AuthorizationType *uint32 `protobuf:"varint,6,req,name=authorization_type,json=authorizationType" json:"authorization_type,omitempty"`
	// List of this service constraints.
	Constraint []*EntitlementConstraint `protobuf:"bytes,7,rep,name=constraint" json:"constraint,omitempty"`
	// Indicates if a separate agreement is required according to
	// original service provider rules (False if omitted).
	AgreementRequired *bool `protobuf:"varint,8,opt,name=agreement_required,json=agreementRequired" json:"agreement_required,omitempty"`
	// Optional agreement text.
	Agreement *Text `protobuf:"bytes,9,opt,name=agreement" json:"agreement,omitempty"`
	// Optional link of a service to a subscriber type.
	// The service is allowed for any subscriber type if omitted.
	// This field is associated with User.SubscriberType enum type.
	SubscriberType *uint32 `protobuf:"varint,10,opt,name=subscriber_type,json=subscriberType" json:"subscriber_type,omitempty"`
	// Indicates whether billing brokerage is mandatory in order to enable the service for a login.
	BillingBrokerageRequired *bool `protobuf:"varint,11,opt,name=billing_brokerage_required,json=billingBrokerageRequired" json:"billing_brokerage_required,omitempty"`
	// Login domains.
	// This field is associated with LoginDomain enum type.
	LoginDomains []uint32 `protobuf:"varint,12,rep,name=login_domains,json=loginDomains" json:"login_domains,omitempty"`
	// Special options.
	// This field is associated with EntitlementService.ServiceOption enum type.
	Options []uint32 `protobuf:"varint,13,rep,name=options" json:"options,omitempty"`
	// Included items.
	Items []*EntitlementServiceItem `protobuf:"bytes,14,rep,name=items" json:"items,omitempty"`
	// Indicates whether brokerage can be assigned for the services in for a login.
	BrokerageAssignable *bool `protobuf:"varint,15,opt,name=brokerage_assignable,json=brokerageAssignable" json:"brokerage_assignable,omitempty"`
	// Indicates whether service requires explicit brokerage authorization in order to be available for brokerage logins.
	BrokerageAuthorizationRequired *bool `protobuf:"varint,16,opt,name=brokerage_authorization_required,json=brokerageAuthorizationRequired" json:"brokerage_authorization_required,omitempty"`
}

func (x *EntitlementService) Reset() {
	*x = EntitlementService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementService) ProtoMessage() {}

func (x *EntitlementService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementService.ProtoReflect.Descriptor instead.
func (*EntitlementService) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{15}
}

func (x *EntitlementService) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EntitlementService) GetName() *Text {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *EntitlementService) GetCategoryId() []uint32 {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

func (x *EntitlementService) GetPrice() []*Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *EntitlementService) GetDescription() *Text {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *EntitlementService) GetAuthorizationType() uint32 {
	if x != nil && x.AuthorizationType != nil {
		return *x.AuthorizationType
	}
	return 0
}

func (x *EntitlementService) GetConstraint() []*EntitlementConstraint {
	if x != nil {
		return x.Constraint
	}
	return nil
}

func (x *EntitlementService) GetAgreementRequired() bool {
	if x != nil && x.AgreementRequired != nil {
		return *x.AgreementRequired
	}
	return false
}

func (x *EntitlementService) GetAgreement() *Text {
	if x != nil {
		return x.Agreement
	}
	return nil
}

func (x *EntitlementService) GetSubscriberType() uint32 {
	if x != nil && x.SubscriberType != nil {
		return *x.SubscriberType
	}
	return 0
}

func (x *EntitlementService) GetBillingBrokerageRequired() bool {
	if x != nil && x.BillingBrokerageRequired != nil {
		return *x.BillingBrokerageRequired
	}
	return false
}

func (x *EntitlementService) GetLoginDomains() []uint32 {
	if x != nil {
		return x.LoginDomains
	}
	return nil
}

func (x *EntitlementService) GetOptions() []uint32 {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *EntitlementService) GetItems() []*EntitlementServiceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *EntitlementService) GetBrokerageAssignable() bool {
	if x != nil && x.BrokerageAssignable != nil {
		return *x.BrokerageAssignable
	}
	return false
}

func (x *EntitlementService) GetBrokerageAuthorizationRequired() bool {
	if x != nil && x.BrokerageAuthorizationRequired != nil {
		return *x.BrokerageAuthorizationRequired
	}
	return false
}

// Entitlement item description.
type EntitlementServiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Entitlement Item ID.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [required] Entitlement Item Type ID.
	Type *EntitlementServiceItemType `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// [required] Item name.
	Name *Text `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *EntitlementServiceItem) Reset() {
	*x = EntitlementServiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementServiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementServiceItem) ProtoMessage() {}

func (x *EntitlementServiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementServiceItem.ProtoReflect.Descriptor instead.
func (*EntitlementServiceItem) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{16}
}

func (x *EntitlementServiceItem) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *EntitlementServiceItem) GetType() *EntitlementServiceItemType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *EntitlementServiceItem) GetName() *Text {
	if x != nil {
		return x.Name
	}
	return nil
}

// Entitlement item type.
type EntitlementServiceItemType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Type ID.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [required] Type name.
	Name *Text `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Type description.
	Description *Text `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Determines whether item type is exchange (market data).
	IsMarketData *bool `protobuf:"varint,4,opt,name=is_market_data,json=isMarketData" json:"is_market_data,omitempty"`
}

func (x *EntitlementServiceItemType) Reset() {
	*x = EntitlementServiceItemType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementServiceItemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementServiceItemType) ProtoMessage() {}

func (x *EntitlementServiceItemType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementServiceItemType.ProtoReflect.Descriptor instead.
func (*EntitlementServiceItemType) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{17}
}

func (x *EntitlementServiceItemType) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *EntitlementServiceItemType) GetName() *Text {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *EntitlementServiceItemType) GetDescription() *Text {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *EntitlementServiceItemType) GetIsMarketData() bool {
	if x != nil && x.IsMarketData != nil {
		return *x.IsMarketData
	}
	return false
}

// Price as currency and value.
type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Currency code (real currency code is ISO 4217 based;
	// for crypto currency code, please contact continuum@cqg.com).
	Currency *string `protobuf:"bytes,1,req,name=currency" json:"currency,omitempty"`
	// Price value in a specified currency.
	Value *float64 `protobuf:"fixed64,2,req,name=value" json:"value,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{18}
}

func (x *Price) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *Price) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// Category of entitlement.
type EntitlementCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Category ID.
	Id *uint32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Category name.
	Name *Text `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	// List of sub-categories.
	SubCategory []*EntitlementCategory `protobuf:"bytes,3,rep,name=sub_category,json=subCategory" json:"sub_category,omitempty"`
	// Indicates whether brokerage can be assigned for the services in the catogory for a login.
	BrokerageAssignable *bool `protobuf:"varint,4,opt,name=brokerage_assignable,json=brokerageAssignable" json:"brokerage_assignable,omitempty"`
}

func (x *EntitlementCategory) Reset() {
	*x = EntitlementCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementCategory) ProtoMessage() {}

func (x *EntitlementCategory) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementCategory.ProtoReflect.Descriptor instead.
func (*EntitlementCategory) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{19}
}

func (x *EntitlementCategory) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EntitlementCategory) GetName() *Text {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *EntitlementCategory) GetSubCategory() []*EntitlementCategory {
	if x != nil {
		return x.SubCategory
	}
	return nil
}

func (x *EntitlementCategory) GetBrokerageAssignable() bool {
	if x != nil && x.BrokerageAssignable != nil {
		return *x.BrokerageAssignable
	}
	return false
}

// Entitlement constraint
type EntitlementConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is associated with EntitlementConstraint.Type enum type.
	ConstraintType *uint32 `protobuf:"varint,1,req,name=constraint_type,json=constraintType" json:"constraint_type,omitempty"`
	// Referenced service id.
	RefServiceId *uint32 `protobuf:"varint,2,opt,name=ref_service_id,json=refServiceId" json:"ref_service_id,omitempty"`
	// Constraint group name for some constraint types.
	ConstraintGroup *string `protobuf:"bytes,3,opt,name=constraint_group,json=constraintGroup" json:"constraint_group,omitempty"`
}

func (x *EntitlementConstraint) Reset() {
	*x = EntitlementConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitlementConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitlementConstraint) ProtoMessage() {}

func (x *EntitlementConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitlementConstraint.ProtoReflect.Descriptor instead.
func (*EntitlementConstraint) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{20}
}

func (x *EntitlementConstraint) GetConstraintType() uint32 {
	if x != nil && x.ConstraintType != nil {
		return *x.ConstraintType
	}
	return 0
}

func (x *EntitlementConstraint) GetRefServiceId() uint32 {
	if x != nil && x.RefServiceId != nil {
		return *x.RefServiceId
	}
	return 0
}

func (x *EntitlementConstraint) GetConstraintGroup() string {
	if x != nil && x.ConstraintGroup != nil {
		return *x.ConstraintGroup
	}
	return ""
}

// Request of user information.
type UserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User ID to request user information.
	UserId *string `protobuf:"bytes,4,req,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (x *UserInfoRequest) Reset() {
	*x = UserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRequest) ProtoMessage() {}

func (x *UserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRequest.ProtoReflect.Descriptor instead.
func (*UserInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{21}
}

func (x *UserInfoRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

// User information.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [optional] List of field ids to clear during update operation.
	ClearedFields []uint32 `protobuf:"varint,23,rep,name=cleared_fields,json=clearedFields" json:"cleared_fields,omitempty"`
	// [required] User Identifier.
	// The value is ignored for CreateUser operation.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [immutable-update][required-create] User name (max length = 32).
	UserName *string `protobuf:"bytes,2,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	// [obsolete] User first name (max length = 20).
	//
	// Deprecated: Do not use.
	ObsoleteFirstName *string `protobuf:"bytes,3,opt,name=obsolete_first_name,json=obsoleteFirstName" json:"obsolete_first_name,omitempty"`
	// [obsolete] User last name (max length = 25).
	//
	// Deprecated: Do not use.
	ObsoleteLastName *string `protobuf:"bytes,4,opt,name=obsolete_last_name,json=obsoleteLastName" json:"obsolete_last_name,omitempty"`
	// [obsolete] User e-mail (max length = 60).
	//
	// Deprecated: Do not use.
	ObsoleteEmail *string `protobuf:"bytes,5,opt,name=obsolete_email,json=obsoleteEmail" json:"obsolete_email,omitempty"`
	// [immutable-update][required-create] Linked customer id (required for new users creation).
	CustomerId *string `protobuf:"bytes,6,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	// [required-create] Subscriber Type. PRO by default when created.
	// This field is associated with User.SubscriberType enum type.
	// Supported login domains: system, trade-routing.
	SubscriberType *uint32 `protobuf:"varint,7,opt,name=subscriber_type,json=subscriberType" json:"subscriber_type,omitempty"`
	// Date till the user is alive and then the user will be removed.
	// Datetime format is used but only date part is used, time part is ignored.
	// Supported login domains: system.
	RemovalDate *int64 `protobuf:"zigzag64,8,opt,name=removal_date,json=removalDate" json:"removal_date,omitempty"`
	// [immutable] Identifier of CQG System user.
	SystemId *string `protobuf:"bytes,9,opt,name=system_id,json=systemId" json:"system_id,omitempty"`
	// [immutable] Identifier of Trade Routing user.
	TraderId *string `protobuf:"bytes,10,opt,name=trader_id,json=traderId" json:"trader_id,omitempty"`
	// [immutable] List of enforced mandatory constraint group names.
	EnforcedConstraintGroup []string `protobuf:"bytes,11,rep,name=enforced_constraint_group,json=enforcedConstraintGroup" json:"enforced_constraint_group,omitempty"`
	// [immutable] Billing currency code (ISO 4217)
	Currency *string `protobuf:"bytes,12,opt,name=currency" json:"currency,omitempty"`
	// [immutable-update][required-create] Login domain.
	// This field is associated with LoginDomain enum type.
	Domain *uint32 `protobuf:"varint,13,opt,name=domain" json:"domain,omitempty"`
	// [immutable] Removed flag.
	Removed *bool `protobuf:"varint,14,opt,name=removed" json:"removed,omitempty"`
	// [immutable-update] Login class.
	// If not provided during create, default used - regular class.
	// This field is associated with User.LoginClass enum type.
	// Supported login domains: trade-routing.
	Class *uint32 `protobuf:"varint,15,opt,name=class" json:"class,omitempty"`
	// Temporary login for demo access.
	// Supported login domains: trade-routing.
	IsTemporary *bool `protobuf:"varint,16,opt,name=is_temporary,json=isTemporary" json:"is_temporary,omitempty"`
	// [immutable] Determines, whether login can be used for trading.
	// Supported login domains: trade-routing.
	IsActive *bool `protobuf:"varint,17,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	// [immutable] Date and Time, when login is deactivated and can't be used for trading.
	// Supported login domains: trade-routing.
	ExpirationTime *int64 `protobuf:"zigzag64,18,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
	// [immutable] Identifier of CAST user.
	CastUserId *string `protobuf:"bytes,19,opt,name=cast_user_id,json=castUserId" json:"cast_user_id,omitempty"`
	// Admin login's scope.
	// Supported login domains: admin.
	// This field is associated with AdminLoginScope enum.
	Scope *uint32 `protobuf:"varint,20,opt,name=scope" json:"scope,omitempty"`
	// Enforce IP whitelist check.
	// Supported login domains: admin, trade-routing.
	EnforceIpWhitelist *bool `protobuf:"varint,21,opt,name=enforce_ip_whitelist,json=enforceIpWhitelist" json:"enforce_ip_whitelist,omitempty"`
	// IP addresses whitelist in CIDR notation.
	// Supported login domains: admin, trade-routing.
	IpWhitelist []string `protobuf:"bytes,22,rep,name=ip_whitelist,json=ipWhitelist" json:"ip_whitelist,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{22}
}

func (x *User) GetClearedFields() []uint32 {
	if x != nil {
		return x.ClearedFields
	}
	return nil
}

func (x *User) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *User) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

// Deprecated: Do not use.
func (x *User) GetObsoleteFirstName() string {
	if x != nil && x.ObsoleteFirstName != nil {
		return *x.ObsoleteFirstName
	}
	return ""
}

// Deprecated: Do not use.
func (x *User) GetObsoleteLastName() string {
	if x != nil && x.ObsoleteLastName != nil {
		return *x.ObsoleteLastName
	}
	return ""
}

// Deprecated: Do not use.
func (x *User) GetObsoleteEmail() string {
	if x != nil && x.ObsoleteEmail != nil {
		return *x.ObsoleteEmail
	}
	return ""
}

func (x *User) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *User) GetSubscriberType() uint32 {
	if x != nil && x.SubscriberType != nil {
		return *x.SubscriberType
	}
	return 0
}

func (x *User) GetRemovalDate() int64 {
	if x != nil && x.RemovalDate != nil {
		return *x.RemovalDate
	}
	return 0
}

func (x *User) GetSystemId() string {
	if x != nil && x.SystemId != nil {
		return *x.SystemId
	}
	return ""
}

func (x *User) GetTraderId() string {
	if x != nil && x.TraderId != nil {
		return *x.TraderId
	}
	return ""
}

func (x *User) GetEnforcedConstraintGroup() []string {
	if x != nil {
		return x.EnforcedConstraintGroup
	}
	return nil
}

func (x *User) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *User) GetDomain() uint32 {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return 0
}

func (x *User) GetRemoved() bool {
	if x != nil && x.Removed != nil {
		return *x.Removed
	}
	return false
}

func (x *User) GetClass() uint32 {
	if x != nil && x.Class != nil {
		return *x.Class
	}
	return 0
}

func (x *User) GetIsTemporary() bool {
	if x != nil && x.IsTemporary != nil {
		return *x.IsTemporary
	}
	return false
}

func (x *User) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *User) GetExpirationTime() int64 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

func (x *User) GetCastUserId() string {
	if x != nil && x.CastUserId != nil {
		return *x.CastUserId
	}
	return ""
}

func (x *User) GetScope() uint32 {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return 0
}

func (x *User) GetEnforceIpWhitelist() bool {
	if x != nil && x.EnforceIpWhitelist != nil {
		return *x.EnforceIpWhitelist
	}
	return false
}

func (x *User) GetIpWhitelist() []string {
	if x != nil {
		return x.IpWhitelist
	}
	return nil
}

// Additional login settings.
type LoginSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [optional] List of field ids to clear during update operation.
	ClearedFields []uint32 `protobuf:"varint,7,rep,name=cleared_fields,json=clearedFields" json:"cleared_fields,omitempty"`
	// [required] Login Identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
	// Preferred connection point.
	// The values are associated with a lookup property with CONNECTION_POINT type.
	PreferredConnectionPointId *string `protobuf:"bytes,2,opt,name=preferred_connection_point_id,json=preferredConnectionPointId" json:"preferred_connection_point_id,omitempty"`
	// Possible concurrent sessions number per one IP.
	// View and modify access to this field is limited for Admin users.
	// Provide the field id in cleared_fields to reset the value during update operation.
	ConcurrentSessionsNumber *uint32 `protobuf:"varint,3,opt,name=concurrent_sessions_number,json=concurrentSessionsNumber" json:"concurrent_sessions_number,omitempty"`
	// Determines whether password never expires.
	PasswordNeverExpires *bool `protobuf:"varint,4,opt,name=password_never_expires,json=passwordNeverExpires" json:"password_never_expires,omitempty"`
	// [obsolete] Strategies can be executed through this login.
	//
	// Deprecated: Do not use.
	ObsoleteIsStrategyRunner *bool `protobuf:"varint,5,opt,name=obsolete_is_strategy_runner,json=obsoleteIsStrategyRunner" json:"obsolete_is_strategy_runner,omitempty"`
	// [immutable] This can be used in case when preferred_connection_point_id is missing in lookup list.
	PreferredConnectionPointName *string `protobuf:"bytes,6,opt,name=preferred_connection_point_name,json=preferredConnectionPointName" json:"preferred_connection_point_name,omitempty"`
	// Linked login for operations on behave of.
	// Admin domain only.
	LinkedLoginId *string `protobuf:"bytes,8,opt,name=linked_login_id,json=linkedLoginId" json:"linked_login_id,omitempty"`
	// Parameters of external authentication, if any.
	// Supported login domains: trade-routing.
	ExternalAuth *ExternalAuth `protobuf:"bytes,9,opt,name=external_auth,json=externalAuth" json:"external_auth,omitempty"`
	// Per-user override of limit of allowed logons per day. Zero or absent field
	// mean no override.
	DailyLogonLimit *uint32 `protobuf:"varint,10,opt,name=daily_logon_limit,json=dailyLogonLimit" json:"daily_logon_limit,omitempty"`
	// [immutable] Number of performed logons for current day. Absent field means zero.
	// Note: day boundary is 00:00 UTC.
	DailyLogonCount *uint32 `protobuf:"varint,11,opt,name=daily_logon_count,json=dailyLogonCount" json:"daily_logon_count,omitempty"`
}

func (x *LoginSettings) Reset() {
	*x = LoginSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSettings) ProtoMessage() {}

func (x *LoginSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSettings.ProtoReflect.Descriptor instead.
func (*LoginSettings) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{23}
}

func (x *LoginSettings) GetClearedFields() []uint32 {
	if x != nil {
		return x.ClearedFields
	}
	return nil
}

func (x *LoginSettings) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

func (x *LoginSettings) GetPreferredConnectionPointId() string {
	if x != nil && x.PreferredConnectionPointId != nil {
		return *x.PreferredConnectionPointId
	}
	return ""
}

func (x *LoginSettings) GetConcurrentSessionsNumber() uint32 {
	if x != nil && x.ConcurrentSessionsNumber != nil {
		return *x.ConcurrentSessionsNumber
	}
	return 0
}

func (x *LoginSettings) GetPasswordNeverExpires() bool {
	if x != nil && x.PasswordNeverExpires != nil {
		return *x.PasswordNeverExpires
	}
	return false
}

// Deprecated: Do not use.
func (x *LoginSettings) GetObsoleteIsStrategyRunner() bool {
	if x != nil && x.ObsoleteIsStrategyRunner != nil {
		return *x.ObsoleteIsStrategyRunner
	}
	return false
}

func (x *LoginSettings) GetPreferredConnectionPointName() string {
	if x != nil && x.PreferredConnectionPointName != nil {
		return *x.PreferredConnectionPointName
	}
	return ""
}

func (x *LoginSettings) GetLinkedLoginId() string {
	if x != nil && x.LinkedLoginId != nil {
		return *x.LinkedLoginId
	}
	return ""
}

func (x *LoginSettings) GetExternalAuth() *ExternalAuth {
	if x != nil {
		return x.ExternalAuth
	}
	return nil
}

func (x *LoginSettings) GetDailyLogonLimit() uint32 {
	if x != nil && x.DailyLogonLimit != nil {
		return *x.DailyLogonLimit
	}
	return 0
}

func (x *LoginSettings) GetDailyLogonCount() uint32 {
	if x != nil && x.DailyLogonCount != nil {
		return *x.DailyLogonCount
	}
	return 0
}

// Service assigned to a user.
type UserEntitlementService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of a user.
	UserId *string `protobuf:"bytes,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
	// Assigned service ID.
	EntitlementServiceId *uint32 `protobuf:"varint,2,req,name=entitlement_service_id,json=entitlementServiceId" json:"entitlement_service_id,omitempty"`
	// Time when this entitlement was enabled or is planned to enabled for the user.
	FromUtcTime *int64 `protobuf:"zigzag64,3,opt,name=from_utc_time,json=fromUtcTime" json:"from_utc_time,omitempty"`
	// [obsolete] Time when this entitlement is planned to be disabled for the user.
	//
	// Deprecated: Do not use.
	ObsoleteToUtcTime *int64 `protobuf:"zigzag64,4,opt,name=obsolete_to_utc_time,json=obsoleteToUtcTime" json:"obsolete_to_utc_time,omitempty"`
	// ID of brokerage who is responsible for billing of the service.
	BillingBrokerageId *string `protobuf:"bytes,5,opt,name=billing_brokerage_id,json=billingBrokerageId" json:"billing_brokerage_id,omitempty"`
	// Brokerages assigned to Entitlement service (only for products).
	AssignedBrokerages []*AssignedBrokerage `protobuf:"bytes,6,rep,name=assigned_brokerages,json=assignedBrokerages" json:"assigned_brokerages,omitempty"`
}

func (x *UserEntitlementService) Reset() {
	*x = UserEntitlementService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEntitlementService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEntitlementService) ProtoMessage() {}

func (x *UserEntitlementService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEntitlementService.ProtoReflect.Descriptor instead.
func (*UserEntitlementService) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{24}
}

func (x *UserEntitlementService) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *UserEntitlementService) GetEntitlementServiceId() uint32 {
	if x != nil && x.EntitlementServiceId != nil {
		return *x.EntitlementServiceId
	}
	return 0
}

func (x *UserEntitlementService) GetFromUtcTime() int64 {
	if x != nil && x.FromUtcTime != nil {
		return *x.FromUtcTime
	}
	return 0
}

// Deprecated: Do not use.
func (x *UserEntitlementService) GetObsoleteToUtcTime() int64 {
	if x != nil && x.ObsoleteToUtcTime != nil {
		return *x.ObsoleteToUtcTime
	}
	return 0
}

func (x *UserEntitlementService) GetBillingBrokerageId() string {
	if x != nil && x.BillingBrokerageId != nil {
		return *x.BillingBrokerageId
	}
	return ""
}

func (x *UserEntitlementService) GetAssignedBrokerages() []*AssignedBrokerage {
	if x != nil {
		return x.AssignedBrokerages
	}
	return nil
}

// Brokerage assigned to Entitlement service.
type AssignedBrokerage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Brokerage ID.
	BrokerageId *string `protobuf:"bytes,1,req,name=brokerage_id,json=brokerageId" json:"brokerage_id,omitempty"`
	// If True - brokerage is charged for service not by price, but by usage; otherwise - by price, as usual.
	WaiveBaseCharge *bool `protobuf:"varint,2,opt,name=waive_base_charge,json=waiveBaseCharge" json:"waive_base_charge,omitempty"`
}

func (x *AssignedBrokerage) Reset() {
	*x = AssignedBrokerage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignedBrokerage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignedBrokerage) ProtoMessage() {}

func (x *AssignedBrokerage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignedBrokerage.ProtoReflect.Descriptor instead.
func (*AssignedBrokerage) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{25}
}

func (x *AssignedBrokerage) GetBrokerageId() string {
	if x != nil && x.BrokerageId != nil {
		return *x.BrokerageId
	}
	return ""
}

func (x *AssignedBrokerage) GetWaiveBaseCharge() bool {
	if x != nil && x.WaiveBaseCharge != nil {
		return *x.WaiveBaseCharge
	}
	return false
}

// Request to search for a user.
type UserSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [obsolete] Text to search.
	//
	// Deprecated: Do not use.
	ObsoleteText *string `protobuf:"bytes,1,opt,name=obsolete_text,json=obsoleteText" json:"obsolete_text,omitempty"`
	// [obsolete] List of search options.
	// This field is associated with SearchCriteria enum type.
	// Empty list means search by any possible options.
	//
	// Deprecated: Do not use.
	ObsoleteSearchCriteria []uint32 `protobuf:"varint,2,rep,name=obsolete_search_criteria,json=obsoleteSearchCriteria" json:"obsolete_search_criteria,omitempty"`
	// List of search options. Each option has its own search text, criteria and matching rule.
	SearchOptions []*SearchOption `protobuf:"bytes,3,rep,name=search_options,json=searchOptions" json:"search_options,omitempty"`
	// Indicates, whether all criteria must match at once.
	// By default any criteria must match.
	AllMatchMode *bool `protobuf:"varint,4,opt,name=all_match_mode,json=allMatchMode,def=0" json:"all_match_mode,omitempty"`
}

// Default values for UserSearchRequest fields.
const (
	Default_UserSearchRequest_AllMatchMode = bool(false)
)

func (x *UserSearchRequest) Reset() {
	*x = UserSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSearchRequest) ProtoMessage() {}

func (x *UserSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSearchRequest.ProtoReflect.Descriptor instead.
func (*UserSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{26}
}

// Deprecated: Do not use.
func (x *UserSearchRequest) GetObsoleteText() string {
	if x != nil && x.ObsoleteText != nil {
		return *x.ObsoleteText
	}
	return ""
}

// Deprecated: Do not use.
func (x *UserSearchRequest) GetObsoleteSearchCriteria() []uint32 {
	if x != nil {
		return x.ObsoleteSearchCriteria
	}
	return nil
}

func (x *UserSearchRequest) GetSearchOptions() []*SearchOption {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *UserSearchRequest) GetAllMatchMode() bool {
	if x != nil && x.AllMatchMode != nil {
		return *x.AllMatchMode
	}
	return Default_UserSearchRequest_AllMatchMode
}

// User search result record.
type UserSearchResultRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User identifier.
	UserId *string `protobuf:"bytes,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
	// User name.
	UserName *string `protobuf:"bytes,2,req,name=user_name,json=userName" json:"user_name,omitempty"`
	// Customer's first name.
	FirstName *string `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	// Customer's last name.
	LastName *string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	// Customer id.
	CustomerId *string `protobuf:"bytes,5,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	// Customer name.
	CustomerName *string `protobuf:"bytes,6,opt,name=customer_name,json=customerName" json:"customer_name,omitempty"`
	// Customer's brokerage name.
	CustomerBrokerageName *string `protobuf:"bytes,7,opt,name=customer_brokerage_name,json=customerBrokerageName" json:"customer_brokerage_name,omitempty"`
	// Removed flag.
	Removed *bool `protobuf:"varint,8,opt,name=removed" json:"removed,omitempty"`
	// User class.
	// This field is associated with User.LoginClass enum type.
	Class *uint32 `protobuf:"varint,9,opt,name=class" json:"class,omitempty"`
	// Temporary user for demo access.
	IsTemporary *bool `protobuf:"varint,10,opt,name=is_temporary,json=isTemporary" json:"is_temporary,omitempty"`
}

func (x *UserSearchResultRecord) Reset() {
	*x = UserSearchResultRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSearchResultRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSearchResultRecord) ProtoMessage() {}

func (x *UserSearchResultRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSearchResultRecord.ProtoReflect.Descriptor instead.
func (*UserSearchResultRecord) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{27}
}

func (x *UserSearchResultRecord) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *UserSearchResultRecord) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *UserSearchResultRecord) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *UserSearchResultRecord) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *UserSearchResultRecord) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *UserSearchResultRecord) GetCustomerName() string {
	if x != nil && x.CustomerName != nil {
		return *x.CustomerName
	}
	return ""
}

func (x *UserSearchResultRecord) GetCustomerBrokerageName() string {
	if x != nil && x.CustomerBrokerageName != nil {
		return *x.CustomerBrokerageName
	}
	return ""
}

func (x *UserSearchResultRecord) GetRemoved() bool {
	if x != nil && x.Removed != nil {
		return *x.Removed
	}
	return false
}

func (x *UserSearchResultRecord) GetClass() uint32 {
	if x != nil && x.Class != nil {
		return *x.Class
	}
	return 0
}

func (x *UserSearchResultRecord) GetIsTemporary() bool {
	if x != nil && x.IsTemporary != nil {
		return *x.IsTemporary
	}
	return false
}

// Clone template or regular user request.
type CloneUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Source user identifier.
	SourceUserId *string `protobuf:"bytes,1,opt,name=source_user_id,json=sourceUserId" json:"source_user_id,omitempty"`
	// [required] New user username (max length = 32).
	NewUserUsername *string `protobuf:"bytes,2,opt,name=new_user_username,json=newUserUsername" json:"new_user_username,omitempty"`
	// [obsolete] New user first name (max length = 20).
	//
	// Deprecated: Do not use.
	ObsoleteNewUserFirstName *string `protobuf:"bytes,3,opt,name=obsolete_new_user_first_name,json=obsoleteNewUserFirstName" json:"obsolete_new_user_first_name,omitempty"`
	// [obsolete] New user last name (max length = 25).
	//
	// Deprecated: Do not use.
	ObsoleteNewUserLastName *string `protobuf:"bytes,4,opt,name=obsolete_new_user_last_name,json=obsoleteNewUserLastName" json:"obsolete_new_user_last_name,omitempty"`
	// [obsolete] New user address.
	//
	// Deprecated: Do not use.
	ObsoleteNewUserAddress *Address `protobuf:"bytes,5,opt,name=obsolete_new_user_address,json=obsoleteNewUserAddress" json:"obsolete_new_user_address,omitempty"`
	// [required] New user contact information.
	NewUserContactInformation *ContactInformation `protobuf:"bytes,6,opt,name=new_user_contact_information,json=newUserContactInformation" json:"new_user_contact_information,omitempty"`
	// [obsolete] New user middle initial (max length = 1).
	//
	// Deprecated: Do not use.
	ObsoleteNewUserMiddleInitial *string `protobuf:"bytes,7,opt,name=obsolete_new_user_middle_initial,json=obsoleteNewUserMiddleInitial" json:"obsolete_new_user_middle_initial,omitempty"`
	// Profile identifier that cloned login should be linked with.
	TargetProfileId *string `protobuf:"bytes,8,opt,name=target_profile_id,json=targetProfileId" json:"target_profile_id,omitempty"`
}

func (x *CloneUser) Reset() {
	*x = CloneUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneUser) ProtoMessage() {}

func (x *CloneUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneUser.ProtoReflect.Descriptor instead.
func (*CloneUser) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{28}
}

func (x *CloneUser) GetSourceUserId() string {
	if x != nil && x.SourceUserId != nil {
		return *x.SourceUserId
	}
	return ""
}

func (x *CloneUser) GetNewUserUsername() string {
	if x != nil && x.NewUserUsername != nil {
		return *x.NewUserUsername
	}
	return ""
}

// Deprecated: Do not use.
func (x *CloneUser) GetObsoleteNewUserFirstName() string {
	if x != nil && x.ObsoleteNewUserFirstName != nil {
		return *x.ObsoleteNewUserFirstName
	}
	return ""
}

// Deprecated: Do not use.
func (x *CloneUser) GetObsoleteNewUserLastName() string {
	if x != nil && x.ObsoleteNewUserLastName != nil {
		return *x.ObsoleteNewUserLastName
	}
	return ""
}

// Deprecated: Do not use.
func (x *CloneUser) GetObsoleteNewUserAddress() *Address {
	if x != nil {
		return x.ObsoleteNewUserAddress
	}
	return nil
}

func (x *CloneUser) GetNewUserContactInformation() *ContactInformation {
	if x != nil {
		return x.NewUserContactInformation
	}
	return nil
}

// Deprecated: Do not use.
func (x *CloneUser) GetObsoleteNewUserMiddleInitial() string {
	if x != nil && x.ObsoleteNewUserMiddleInitial != nil {
		return *x.ObsoleteNewUserMiddleInitial
	}
	return ""
}

func (x *CloneUser) GetTargetProfileId() string {
	if x != nil && x.TargetProfileId != nil {
		return *x.TargetProfileId
	}
	return ""
}

// Clone user operation result.
type CloneUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// New user identifier.
	NewUserId *string `protobuf:"bytes,1,req,name=new_user_id,json=newUserId" json:"new_user_id,omitempty"`
	// New linked profile identifier.
	NewProfileId *string `protobuf:"bytes,2,opt,name=new_profile_id,json=newProfileId" json:"new_profile_id,omitempty"`
}

func (x *CloneUserResult) Reset() {
	*x = CloneUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneUserResult) ProtoMessage() {}

func (x *CloneUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneUserResult.ProtoReflect.Descriptor instead.
func (*CloneUserResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{29}
}

func (x *CloneUserResult) GetNewUserId() string {
	if x != nil && x.NewUserId != nil {
		return *x.NewUserId
	}
	return ""
}

func (x *CloneUserResult) GetNewProfileId() string {
	if x != nil && x.NewProfileId != nil {
		return *x.NewProfileId
	}
	return ""
}

// Address information.
type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Country code (ISO 3166 based) (max length = 2).
	Country *string `protobuf:"bytes,1,opt,name=country" json:"country,omitempty"`
	// State code (ISO 3166 based) (max length = 2).
	// Provide original message during update operation to clear this field.
	State *string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	// City (max length = 25).
	City *string `protobuf:"bytes,3,opt,name=city" json:"city,omitempty"`
	// ZIP/Postal code (max length = 9).
	Zip *string `protobuf:"bytes,4,opt,name=zip" json:"zip,omitempty"`
	// Address line 1 (max length = 58).
	Address *string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	// Address line 2 (max length = 58).
	Address_2 *string `protobuf:"bytes,6,opt,name=address_2,json=address2" json:"address_2,omitempty"`
	// Name of address for its identification.
	Name *string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// [optional] Validation status of the address.
	// This field is associated with Address.AddressStatus enum type.
	AddressStatus *uint32 `protobuf:"varint,8,opt,name=address_status,json=addressStatus" json:"address_status,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{30}
}

func (x *Address) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil && x.Zip != nil {
		return *x.Zip
	}
	return ""
}

func (x *Address) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *Address) GetAddress_2() string {
	if x != nil && x.Address_2 != nil {
		return *x.Address_2
	}
	return ""
}

func (x *Address) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Address) GetAddressStatus() uint32 {
	if x != nil && x.AddressStatus != nil {
		return *x.AddressStatus
	}
	return 0
}

// Contact information.
type ContactInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of e-mail addresses.
	// Must contain at least one e-mail.
	// Maximum allowed size is 2 elements.
	Email []*Email `protobuf:"bytes,1,rep,name=email" json:"email,omitempty"`
	// List of phones.
	// Maximum allowed size is 3 elements.
	Phone []*Phone `protobuf:"bytes,2,rep,name=phone" json:"phone,omitempty"`
	// List of faxes.
	// Maximum allowed size is 1 element.
	Fax []*Phone `protobuf:"bytes,3,rep,name=fax" json:"fax,omitempty"`
	// Contact first name (max length = 20).
	FirstName *string `protobuf:"bytes,4,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	// Contact last name (max length = 25).
	LastName *string `protobuf:"bytes,5,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	// Mail address information.
	// Maximum allowed size is 1 element.
	Address []*Address `protobuf:"bytes,6,rep,name=address" json:"address,omitempty"`
}

func (x *ContactInformation) Reset() {
	*x = ContactInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactInformation) ProtoMessage() {}

func (x *ContactInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactInformation.ProtoReflect.Descriptor instead.
func (*ContactInformation) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{31}
}

func (x *ContactInformation) GetEmail() []*Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *ContactInformation) GetPhone() []*Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *ContactInformation) GetFax() []*Phone {
	if x != nil {
		return x.Fax
	}
	return nil
}

func (x *ContactInformation) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *ContactInformation) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *ContactInformation) GetAddress() []*Address {
	if x != nil {
		return x.Address
	}
	return nil
}

// e-mail address information.
type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// e-mail (max length = 60).
	// It should be valid email address according to RFC 5322 standard or single period '.'.
	Email *string `protobuf:"bytes,1,req,name=email" json:"email,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{32}
}

func (x *Email) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

// Phone information.
type Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Phone number (max length = 20).
	Number *string `protobuf:"bytes,1,req,name=number" json:"number,omitempty"`
}

func (x *Phone) Reset() {
	*x = Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phone) ProtoMessage() {}

func (x *Phone) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phone.ProtoReflect.Descriptor instead.
func (*Phone) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{33}
}

func (x *Phone) GetNumber() string {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return ""
}

// Request of customer information.
type CustomerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of a requested customer.
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *CustomerRequest) Reset() {
	*x = CustomerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerRequest) ProtoMessage() {}

func (x *CustomerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerRequest.ProtoReflect.Descriptor instead.
func (*CustomerRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{34}
}

func (x *CustomerRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// Customer information.
type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [optional] List of field ids to clear during update operation.
	ClearedFields []uint32 `protobuf:"varint,9,rep,name=cleared_fields,json=clearedFields" json:"cleared_fields,omitempty"`
	// [required] Customer identifier.
	// The value is ignored for CreateCustomer operation.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [required-create] Customer legal type.
	// Customer of admin profile type can be only Individual.
	// This field is associated with Customer.LegalType enum type.
	LegalType *uint32 `protobuf:"varint,2,opt,name=legal_type,json=legalType" json:"legal_type,omitempty"`
	// Customer name (max length = 32).
	// [required-create] for non-Individual legal types.
	// [immutable] for Individual legal type.
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// Customer contact information.
	ContactInformation *ContactInformation `protobuf:"bytes,4,opt,name=contact_information,json=contactInformation" json:"contact_information,omitempty"`
	// [required-create] Brokerage ID.
	// Provide the field id in cleared_fields to reset the value during update operation.
	// Optional only for CQG scope user, required for other scope user.
	BrokerageId *string `protobuf:"bytes,5,opt,name=brokerage_id,json=brokerageId" json:"brokerage_id,omitempty"`
	// [immutable] Removed flag.
	Removed *bool `protobuf:"varint,6,opt,name=removed" json:"removed,omitempty"`
	// [immutable] Authentication system.
	// LookupPropertyListRequest { property_type = CommonLookupPropertyType.AUTHENTICATION_SYSTEM }
	AuthenticationSystem *string `protobuf:"bytes,7,opt,name=authentication_system,json=authenticationSystem" json:"authentication_system,omitempty"`
	// Profile type - represents main type of profile.
	// This field is associated with Customer.ProfileType enum type.
	ProfileType *uint32 `protobuf:"varint,8,opt,name=profile_type,json=profileType,def=1" json:"profile_type,omitempty"`
}

// Default values for Customer fields.
const (
	Default_Customer_ProfileType = uint32(1)
)

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{35}
}

func (x *Customer) GetClearedFields() []uint32 {
	if x != nil {
		return x.ClearedFields
	}
	return nil
}

func (x *Customer) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Customer) GetLegalType() uint32 {
	if x != nil && x.LegalType != nil {
		return *x.LegalType
	}
	return 0
}

func (x *Customer) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Customer) GetContactInformation() *ContactInformation {
	if x != nil {
		return x.ContactInformation
	}
	return nil
}

func (x *Customer) GetBrokerageId() string {
	if x != nil && x.BrokerageId != nil {
		return *x.BrokerageId
	}
	return ""
}

func (x *Customer) GetRemoved() bool {
	if x != nil && x.Removed != nil {
		return *x.Removed
	}
	return false
}

func (x *Customer) GetAuthenticationSystem() string {
	if x != nil && x.AuthenticationSystem != nil {
		return *x.AuthenticationSystem
	}
	return ""
}

func (x *Customer) GetProfileType() uint32 {
	if x != nil && x.ProfileType != nil {
		return *x.ProfileType
	}
	return Default_Customer_ProfileType
}

// Request to search customers.
type CustomerSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [obsolete] Text to search.
	//
	// Deprecated: Do not use.
	ObsoleteText *string `protobuf:"bytes,1,opt,name=obsolete_text,json=obsoleteText" json:"obsolete_text,omitempty"`
	// [obsolete] List of search options.
	// This field is associated with SearchCriteria enum type.
	// Empty list means search by any possible options.
	//
	// Deprecated: Do not use.
	ObsoleteSearchCriteria []uint32 `protobuf:"varint,2,rep,name=obsolete_search_criteria,json=obsoleteSearchCriteria" json:"obsolete_search_criteria,omitempty"`
	// List of search options. Each option has its own search text, criteria and matching rule.
	SearchOptions []*SearchOption `protobuf:"bytes,3,rep,name=search_options,json=searchOptions" json:"search_options,omitempty"`
	// Indicates, whether all criteria must match at once.
	// By default any criteria must match.
	AllMatchMode *bool `protobuf:"varint,4,opt,name=all_match_mode,json=allMatchMode,def=0" json:"all_match_mode,omitempty"`
}

// Default values for CustomerSearchRequest fields.
const (
	Default_CustomerSearchRequest_AllMatchMode = bool(false)
)

func (x *CustomerSearchRequest) Reset() {
	*x = CustomerSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerSearchRequest) ProtoMessage() {}

func (x *CustomerSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerSearchRequest.ProtoReflect.Descriptor instead.
func (*CustomerSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{36}
}

// Deprecated: Do not use.
func (x *CustomerSearchRequest) GetObsoleteText() string {
	if x != nil && x.ObsoleteText != nil {
		return *x.ObsoleteText
	}
	return ""
}

// Deprecated: Do not use.
func (x *CustomerSearchRequest) GetObsoleteSearchCriteria() []uint32 {
	if x != nil {
		return x.ObsoleteSearchCriteria
	}
	return nil
}

func (x *CustomerSearchRequest) GetSearchOptions() []*SearchOption {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *CustomerSearchRequest) GetAllMatchMode() bool {
	if x != nil && x.AllMatchMode != nil {
		return *x.AllMatchMode
	}
	return Default_CustomerSearchRequest_AllMatchMode
}

type CustomerSearchResultRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Customer identifier.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// [required] Customer name.
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Customer's brokerage name.
	BrokerageName *string `protobuf:"bytes,3,opt,name=brokerage_name,json=brokerageName" json:"brokerage_name,omitempty"`
	// Contact first name.
	FirstName *string `protobuf:"bytes,4,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	// Contact last name.
	LastName *string `protobuf:"bytes,5,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	// Customer's brokerage id.
	BrokerageId *string `protobuf:"bytes,6,opt,name=brokerage_id,json=brokerageId" json:"brokerage_id,omitempty"`
	// [required] Removed flag.
	Removed *bool `protobuf:"varint,7,opt,name=removed" json:"removed,omitempty"`
	// [required] Authentication system.
	// LookupPropertyListRequest { property_type = CommonLookupPropertyType.AUTHENTICATION_SYSTEM }
	AuthenticationSystem *string `protobuf:"bytes,8,opt,name=authentication_system,json=authenticationSystem" json:"authentication_system,omitempty"`
	// [required] Profile's main type.
	// This field is associated with Customer.ProfileType enum type.
	ProfileType *uint32 `protobuf:"varint,9,opt,name=profile_type,json=profileType" json:"profile_type,omitempty"`
}

func (x *CustomerSearchResultRecord) Reset() {
	*x = CustomerSearchResultRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerSearchResultRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerSearchResultRecord) ProtoMessage() {}

func (x *CustomerSearchResultRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerSearchResultRecord.ProtoReflect.Descriptor instead.
func (*CustomerSearchResultRecord) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{37}
}

func (x *CustomerSearchResultRecord) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CustomerSearchResultRecord) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CustomerSearchResultRecord) GetBrokerageName() string {
	if x != nil && x.BrokerageName != nil {
		return *x.BrokerageName
	}
	return ""
}

func (x *CustomerSearchResultRecord) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *CustomerSearchResultRecord) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *CustomerSearchResultRecord) GetBrokerageId() string {
	if x != nil && x.BrokerageId != nil {
		return *x.BrokerageId
	}
	return ""
}

func (x *CustomerSearchResultRecord) GetRemoved() bool {
	if x != nil && x.Removed != nil {
		return *x.Removed
	}
	return false
}

func (x *CustomerSearchResultRecord) GetAuthenticationSystem() string {
	if x != nil && x.AuthenticationSystem != nil {
		return *x.AuthenticationSystem
	}
	return ""
}

func (x *CustomerSearchResultRecord) GetProfileType() uint32 {
	if x != nil && x.ProfileType != nil {
		return *x.ProfileType
	}
	return 0
}

// Create customer operation.
type CreateCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer to create.
	Customer *Customer `protobuf:"bytes,1,req,name=customer" json:"customer,omitempty"`
}

func (x *CreateCustomer) Reset() {
	*x = CreateCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomer) ProtoMessage() {}

func (x *CreateCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomer.ProtoReflect.Descriptor instead.
func (*CreateCustomer) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{38}
}

func (x *CreateCustomer) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

// Update customer operation.
type UpdateCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer to update.
	Customer *Customer `protobuf:"bytes,1,req,name=customer" json:"customer,omitempty"`
	// Optional original customer information.
	// When provided, only fields that are different from the original customer are changed
	// otherwise customer information is applied as provided in customer field.
	OriginalCustomer *Customer `protobuf:"bytes,2,opt,name=original_customer,json=originalCustomer" json:"original_customer,omitempty"`
}

func (x *UpdateCustomer) Reset() {
	*x = UpdateCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomer) ProtoMessage() {}

func (x *UpdateCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomer.ProtoReflect.Descriptor instead.
func (*UpdateCustomer) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateCustomer) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *UpdateCustomer) GetOriginalCustomer() *Customer {
	if x != nil {
		return x.OriginalCustomer
	}
	return nil
}

// Remove customer operation.
type RemoveCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer identifier to remove.
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *RemoveCustomer) Reset() {
	*x = RemoveCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomer) ProtoMessage() {}

func (x *RemoveCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomer.ProtoReflect.Descriptor instead.
func (*RemoveCustomer) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{40}
}

func (x *RemoveCustomer) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// Restore customer operation.
type RestoreCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Customer identifier to restore.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *RestoreCustomer) Reset() {
	*x = RestoreCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreCustomer) ProtoMessage() {}

func (x *RestoreCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreCustomer.ProtoReflect.Descriptor instead.
func (*RestoreCustomer) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{41}
}

func (x *RestoreCustomer) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// Result of create customer operation.
type CreateCustomerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Assigned customer id, if succeeded.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *CreateCustomerResult) Reset() {
	*x = CreateCustomerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerResult) ProtoMessage() {}

func (x *CreateCustomerResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerResult.ProtoReflect.Descriptor instead.
func (*CreateCustomerResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{42}
}

func (x *CreateCustomerResult) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// Result of update customer operation.
type UpdateCustomerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCustomerResult) Reset() {
	*x = UpdateCustomerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerResult) ProtoMessage() {}

func (x *UpdateCustomerResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerResult.ProtoReflect.Descriptor instead.
func (*UpdateCustomerResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{43}
}

// Result of remove customer operation.
type RemoveCustomerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveCustomerResult) Reset() {
	*x = RemoveCustomerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCustomerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCustomerResult) ProtoMessage() {}

func (x *RemoveCustomerResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCustomerResult.ProtoReflect.Descriptor instead.
func (*RemoveCustomerResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{44}
}

// Result of restore customer operation.
type RestoreCustomerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestoreCustomerResult) Reset() {
	*x = RestoreCustomerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreCustomerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreCustomerResult) ProtoMessage() {}

func (x *RestoreCustomerResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreCustomerResult.ProtoReflect.Descriptor instead.
func (*RestoreCustomerResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{45}
}

// Create user operation.
type CreateUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User to create.
	User *User `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
}

func (x *CreateUser) Reset() {
	*x = CreateUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUser) ProtoMessage() {}

func (x *CreateUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUser.ProtoReflect.Descriptor instead.
func (*CreateUser) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{46}
}

func (x *CreateUser) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Update user operation.
type UpdateUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer to update.
	User *User `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	// Optional original user information.
	OriginalUser *User `protobuf:"bytes,2,opt,name=original_user,json=originalUser" json:"original_user,omitempty"`
}

func (x *UpdateUser) Reset() {
	*x = UpdateUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUser) ProtoMessage() {}

func (x *UpdateUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUser.ProtoReflect.Descriptor instead.
func (*UpdateUser) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateUser) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUser) GetOriginalUser() *User {
	if x != nil {
		return x.OriginalUser
	}
	return nil
}

// Remove user operation.
type RemoveUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User identifier to remove.
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *RemoveUser) Reset() {
	*x = RemoveUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUser) ProtoMessage() {}

func (x *RemoveUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUser.ProtoReflect.Descriptor instead.
func (*RemoveUser) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{48}
}

func (x *RemoveUser) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// Restore user operation.
type RestoreUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User identifier to restore.
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
}

func (x *RestoreUser) Reset() {
	*x = RestoreUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreUser) ProtoMessage() {}

func (x *RestoreUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreUser.ProtoReflect.Descriptor instead.
func (*RestoreUser) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{49}
}

func (x *RestoreUser) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// Result of create user operation.
type CreateUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Assigned user id, if succeeded.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (x *CreateUserResult) Reset() {
	*x = CreateUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResult) ProtoMessage() {}

func (x *CreateUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResult.ProtoReflect.Descriptor instead.
func (*CreateUserResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{50}
}

func (x *CreateUserResult) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// Result of update user operation.
type UpdateUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserResult) Reset() {
	*x = UpdateUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResult) ProtoMessage() {}

func (x *UpdateUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResult.ProtoReflect.Descriptor instead.
func (*UpdateUserResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{51}
}

// Result of restore user operation.
type RestoreUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RestoreUserResult) Reset() {
	*x = RestoreUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreUserResult) ProtoMessage() {}

func (x *RestoreUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreUserResult.ProtoReflect.Descriptor instead.
func (*RestoreUserResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{52}
}

// Result of remove user operation.
type RemoveUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveUserResult) Reset() {
	*x = RemoveUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveUserResult) ProtoMessage() {}

func (x *RemoveUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveUserResult.ProtoReflect.Descriptor instead.
func (*RemoveUserResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{53}
}

// Link user  to a customer operation.
type LinkUserToCustomer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User id to link.
	UserId *string `protobuf:"bytes,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
	// Customer id to link.
	CustomerId *string `protobuf:"bytes,2,req,name=customer_id,json=customerId" json:"customer_id,omitempty"`
}

func (x *LinkUserToCustomer) Reset() {
	*x = LinkUserToCustomer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkUserToCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkUserToCustomer) ProtoMessage() {}

func (x *LinkUserToCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkUserToCustomer.ProtoReflect.Descriptor instead.
func (*LinkUserToCustomer) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{54}
}

func (x *LinkUserToCustomer) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *LinkUserToCustomer) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

// Result of [re-]link user to a customer operation.
type LinkUserToCustomerResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LinkUserToCustomerResult) Reset() {
	*x = LinkUserToCustomerResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkUserToCustomerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkUserToCustomerResult) ProtoMessage() {}

func (x *LinkUserToCustomerResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkUserToCustomerResult.ProtoReflect.Descriptor instead.
func (*LinkUserToCustomerResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{55}
}

// Service with an optional restriction period.
type RestrictedEntitlementService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service ID.
	EntitlementServiceId *uint32 `protobuf:"varint,1,req,name=entitlement_service_id,json=entitlementServiceId" json:"entitlement_service_id,omitempty"`
	// Time when this entitlement was enabled or is planned to enabled for the user.
	FromUtcTime *int64 `protobuf:"zigzag64,2,opt,name=from_utc_time,json=fromUtcTime" json:"from_utc_time,omitempty"`
	// Time when this entitlement is planned to be disabled for the user.
	ToUtcTime *int64 `protobuf:"zigzag64,3,opt,name=to_utc_time,json=toUtcTime" json:"to_utc_time,omitempty"`
	// ID of brokerage who will pay for the service usage.
	BillingBrokerageId *string `protobuf:"bytes,4,opt,name=billing_brokerage_id,json=billingBrokerageId" json:"billing_brokerage_id,omitempty"`
	// All brokerages assigned to Entitlement service (only for products).
	AssignedBrokerages []*AssignedBrokerage `protobuf:"bytes,5,rep,name=assigned_brokerages,json=assignedBrokerages" json:"assigned_brokerages,omitempty"`
}

func (x *RestrictedEntitlementService) Reset() {
	*x = RestrictedEntitlementService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestrictedEntitlementService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestrictedEntitlementService) ProtoMessage() {}

func (x *RestrictedEntitlementService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestrictedEntitlementService.ProtoReflect.Descriptor instead.
func (*RestrictedEntitlementService) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{56}
}

func (x *RestrictedEntitlementService) GetEntitlementServiceId() uint32 {
	if x != nil && x.EntitlementServiceId != nil {
		return *x.EntitlementServiceId
	}
	return 0
}

func (x *RestrictedEntitlementService) GetFromUtcTime() int64 {
	if x != nil && x.FromUtcTime != nil {
		return *x.FromUtcTime
	}
	return 0
}

func (x *RestrictedEntitlementService) GetToUtcTime() int64 {
	if x != nil && x.ToUtcTime != nil {
		return *x.ToUtcTime
	}
	return 0
}

func (x *RestrictedEntitlementService) GetBillingBrokerageId() string {
	if x != nil && x.BillingBrokerageId != nil {
		return *x.BillingBrokerageId
	}
	return ""
}

func (x *RestrictedEntitlementService) GetAssignedBrokerages() []*AssignedBrokerage {
	if x != nil {
		return x.AssignedBrokerages
	}
	return nil
}

// Modify user entitlement services operation.
type ModifyUserEntitlementService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User id to modify the list of services.
	UserId *string `protobuf:"bytes,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
	// Services to add.
	// Services to change restriction periods, billing brokerage or assigned brokerages.
	EntitlementServiceToSet []*RestrictedEntitlementService `protobuf:"bytes,2,rep,name=entitlement_service_to_set,json=entitlementServiceToSet" json:"entitlement_service_to_set,omitempty"`
	// Services to remove.
	EntitlementServiceIdToRemove []uint32 `protobuf:"varint,3,rep,name=entitlement_service_id_to_remove,json=entitlementServiceIdToRemove" json:"entitlement_service_id_to_remove,omitempty"`
}

func (x *ModifyUserEntitlementService) Reset() {
	*x = ModifyUserEntitlementService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyUserEntitlementService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserEntitlementService) ProtoMessage() {}

func (x *ModifyUserEntitlementService) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserEntitlementService.ProtoReflect.Descriptor instead.
func (*ModifyUserEntitlementService) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{57}
}

func (x *ModifyUserEntitlementService) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *ModifyUserEntitlementService) GetEntitlementServiceToSet() []*RestrictedEntitlementService {
	if x != nil {
		return x.EntitlementServiceToSet
	}
	return nil
}

func (x *ModifyUserEntitlementService) GetEntitlementServiceIdToRemove() []uint32 {
	if x != nil {
		return x.EntitlementServiceIdToRemove
	}
	return nil
}

// Result of modify user entitlement service operation.
type ModifyUserEntitlementServiceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [obsolete] List of user entitlement services after modification.
	//
	// Deprecated: Do not use.
	ObsoleteRestrictedEntitlementService []*RestrictedEntitlementService `protobuf:"bytes,1,rep,name=obsolete_restricted_entitlement_service,json=obsoleteRestrictedEntitlementService" json:"obsolete_restricted_entitlement_service,omitempty"`
}

func (x *ModifyUserEntitlementServiceResult) Reset() {
	*x = ModifyUserEntitlementServiceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyUserEntitlementServiceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserEntitlementServiceResult) ProtoMessage() {}

func (x *ModifyUserEntitlementServiceResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserEntitlementServiceResult.ProtoReflect.Descriptor instead.
func (*ModifyUserEntitlementServiceResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{58}
}

// Deprecated: Do not use.
func (x *ModifyUserEntitlementServiceResult) GetObsoleteRestrictedEntitlementService() []*RestrictedEntitlementService {
	if x != nil {
		return x.ObsoleteRestrictedEntitlementService
	}
	return nil
}

// Request of unique username.
type GetUniqueUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer id username created for
	CustomerId *string `protobuf:"bytes,1,req,name=customer_id,json=customerId" json:"customer_id,omitempty"`
}

func (x *GetUniqueUsernameRequest) Reset() {
	*x = GetUniqueUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUniqueUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniqueUsernameRequest) ProtoMessage() {}

func (x *GetUniqueUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniqueUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetUniqueUsernameRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{59}
}

func (x *GetUniqueUsernameRequest) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

// Result of unique username request.
type UniqueUsernameResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username, if succeeded.
	Username *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
}

func (x *UniqueUsernameResult) Reset() {
	*x = UniqueUsernameResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniqueUsernameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniqueUsernameResult) ProtoMessage() {}

func (x *UniqueUsernameResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniqueUsernameResult.ProtoReflect.Descriptor instead.
func (*UniqueUsernameResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{60}
}

func (x *UniqueUsernameResult) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

// This entity is used as a common list of name - value pairs for different fields.
type LookupProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The value is associated with Lookup Property type enum defined within the request scope.
	Type *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	// Property Value
	Value *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	// Property Name.
	Name *Text `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	// Optional property description.
	Description *Text `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
}

func (x *LookupProperty) Reset() {
	*x = LookupProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupProperty) ProtoMessage() {}

func (x *LookupProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupProperty.ProtoReflect.Descriptor instead.
func (*LookupProperty) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{61}
}

func (x *LookupProperty) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *LookupProperty) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *LookupProperty) GetName() *Text {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *LookupProperty) GetDescription() *Text {
	if x != nil {
		return x.Description
	}
	return nil
}

// Get a list of lookup properties.
type LookupPropertyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of property types to request.
	// Empty list means all types are requested.
	// The values are associated with Lookup Property type enum defined within the request scope.
	PropertyType []uint32 `protobuf:"varint,1,rep,name=property_type,json=propertyType" json:"property_type,omitempty"`
}

func (x *LookupPropertyListRequest) Reset() {
	*x = LookupPropertyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupPropertyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupPropertyListRequest) ProtoMessage() {}

func (x *LookupPropertyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupPropertyListRequest.ProtoReflect.Descriptor instead.
func (*LookupPropertyListRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{62}
}

func (x *LookupPropertyListRequest) GetPropertyType() []uint32 {
	if x != nil {
		return x.PropertyType
	}
	return nil
}

// Result of a list of lookup properties request.
type LookupPropertyListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of requested lookup properties.
	LookupProperty []*LookupProperty `protobuf:"bytes,1,rep,name=lookup_property,json=lookupProperty" json:"lookup_property,omitempty"`
}

func (x *LookupPropertyListResult) Reset() {
	*x = LookupPropertyListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupPropertyListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupPropertyListResult) ProtoMessage() {}

func (x *LookupPropertyListResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupPropertyListResult.ProtoReflect.Descriptor instead.
func (*LookupPropertyListResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{63}
}

func (x *LookupPropertyListResult) GetLookupProperty() []*LookupProperty {
	if x != nil {
		return x.LookupProperty
	}
	return nil
}

// Search for sales series.
type SalesSeriesSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [obsolete] Text to search.
	//
	// Deprecated: Do not use.
	ObsoleteText *string `protobuf:"bytes,1,opt,name=obsolete_text,json=obsoleteText" json:"obsolete_text,omitempty"`
	// [obsolete] List of search options.
	// This field is associated with SearchCriteria enum type.
	// Empty list means search by any possible options.
	//
	// Deprecated: Do not use.
	ObsoleteSearchCriteria []uint32 `protobuf:"varint,2,rep,name=obsolete_search_criteria,json=obsoleteSearchCriteria" json:"obsolete_search_criteria,omitempty"`
	// List of search options. Each option has its own search text, criteria and matching rule.
	SearchOptions []*SearchOption `protobuf:"bytes,3,rep,name=search_options,json=searchOptions" json:"search_options,omitempty"`
	// Indicates, whether all criteria must match at once.
	// By default any criteria must match.
	AllMatchMode *bool `protobuf:"varint,4,opt,name=all_match_mode,json=allMatchMode,def=0" json:"all_match_mode,omitempty"`
}

// Default values for SalesSeriesSearchRequest fields.
const (
	Default_SalesSeriesSearchRequest_AllMatchMode = bool(false)
)

func (x *SalesSeriesSearchRequest) Reset() {
	*x = SalesSeriesSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesSeriesSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesSeriesSearchRequest) ProtoMessage() {}

func (x *SalesSeriesSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesSeriesSearchRequest.ProtoReflect.Descriptor instead.
func (*SalesSeriesSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{64}
}

// Deprecated: Do not use.
func (x *SalesSeriesSearchRequest) GetObsoleteText() string {
	if x != nil && x.ObsoleteText != nil {
		return *x.ObsoleteText
	}
	return ""
}

// Deprecated: Do not use.
func (x *SalesSeriesSearchRequest) GetObsoleteSearchCriteria() []uint32 {
	if x != nil {
		return x.ObsoleteSearchCriteria
	}
	return nil
}

func (x *SalesSeriesSearchRequest) GetSearchOptions() []*SearchOption {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *SalesSeriesSearchRequest) GetAllMatchMode() bool {
	if x != nil && x.AllMatchMode != nil {
		return *x.AllMatchMode
	}
	return Default_SalesSeriesSearchRequest_AllMatchMode
}

// Represents single found sales series.
type SalesSeriesSearchResultRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesSeriesId     *string `protobuf:"bytes,1,opt,name=sales_series_id,json=salesSeriesId" json:"sales_series_id,omitempty"`
	SalesSeriesName   *string `protobuf:"bytes,2,opt,name=sales_series_name,json=salesSeriesName" json:"sales_series_name,omitempty"`
	SalesSeriesNumber *string `protobuf:"bytes,3,opt,name=sales_series_number,json=salesSeriesNumber" json:"sales_series_number,omitempty"`
	BrokerageId       *string `protobuf:"bytes,4,opt,name=brokerage_id,json=brokerageId" json:"brokerage_id,omitempty"`
	BrokerageName     *string `protobuf:"bytes,5,opt,name=brokerage_name,json=brokerageName" json:"brokerage_name,omitempty"`
	Removed           *bool   `protobuf:"varint,6,opt,name=removed" json:"removed,omitempty"`
}

func (x *SalesSeriesSearchResultRecord) Reset() {
	*x = SalesSeriesSearchResultRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesSeriesSearchResultRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesSeriesSearchResultRecord) ProtoMessage() {}

func (x *SalesSeriesSearchResultRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesSeriesSearchResultRecord.ProtoReflect.Descriptor instead.
func (*SalesSeriesSearchResultRecord) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{65}
}

func (x *SalesSeriesSearchResultRecord) GetSalesSeriesId() string {
	if x != nil && x.SalesSeriesId != nil {
		return *x.SalesSeriesId
	}
	return ""
}

func (x *SalesSeriesSearchResultRecord) GetSalesSeriesName() string {
	if x != nil && x.SalesSeriesName != nil {
		return *x.SalesSeriesName
	}
	return ""
}

func (x *SalesSeriesSearchResultRecord) GetSalesSeriesNumber() string {
	if x != nil && x.SalesSeriesNumber != nil {
		return *x.SalesSeriesNumber
	}
	return ""
}

func (x *SalesSeriesSearchResultRecord) GetBrokerageId() string {
	if x != nil && x.BrokerageId != nil {
		return *x.BrokerageId
	}
	return ""
}

func (x *SalesSeriesSearchResultRecord) GetBrokerageName() string {
	if x != nil && x.BrokerageName != nil {
		return *x.BrokerageName
	}
	return ""
}

func (x *SalesSeriesSearchResultRecord) GetRemoved() bool {
	if x != nil && x.Removed != nil {
		return *x.Removed
	}
	return false
}

// Common tuple message of string values.
type Tuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First  *string `protobuf:"bytes,1,opt,name=first" json:"first,omitempty"`
	Second *string `protobuf:"bytes,2,opt,name=second" json:"second,omitempty"`
	Third  *string `protobuf:"bytes,3,opt,name=third" json:"third,omitempty"`
}

func (x *Tuple) Reset() {
	*x = Tuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tuple) ProtoMessage() {}

func (x *Tuple) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tuple.ProtoReflect.Descriptor instead.
func (*Tuple) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{66}
}

func (x *Tuple) GetFirst() string {
	if x != nil && x.First != nil {
		return *x.First
	}
	return ""
}

func (x *Tuple) GetSecond() string {
	if x != nil && x.Second != nil {
		return *x.Second
	}
	return ""
}

func (x *Tuple) GetThird() string {
	if x != nil && x.Third != nil {
		return *x.Third
	}
	return ""
}

// Customer to sales series authorization list request message.
type CustomerSalesSeriesAuthorizationListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Customer ID.
	// Mutually exclusive with sales_series_id field.
	CustomerId *string `protobuf:"bytes,1,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	// Sales series ID.
	// Mutually exclusive with customer_id field.
	SalesSeriesId *string `protobuf:"bytes,2,opt,name=sales_series_id,json=salesSeriesId" json:"sales_series_id,omitempty"`
	// optionally restrict results by returning the first 'top' records.
	Top *uint32 `protobuf:"varint,3,opt,name=top" json:"top,omitempty"`
}

func (x *CustomerSalesSeriesAuthorizationListRequest) Reset() {
	*x = CustomerSalesSeriesAuthorizationListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerSalesSeriesAuthorizationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerSalesSeriesAuthorizationListRequest) ProtoMessage() {}

func (x *CustomerSalesSeriesAuthorizationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerSalesSeriesAuthorizationListRequest.ProtoReflect.Descriptor instead.
func (*CustomerSalesSeriesAuthorizationListRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{67}
}

func (x *CustomerSalesSeriesAuthorizationListRequest) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *CustomerSalesSeriesAuthorizationListRequest) GetSalesSeriesId() string {
	if x != nil && x.SalesSeriesId != nil {
		return *x.SalesSeriesId
	}
	return ""
}

func (x *CustomerSalesSeriesAuthorizationListRequest) GetTop() uint32 {
	if x != nil && x.Top != nil {
		return *x.Top
	}
	return 0
}

// Update customer to sales series authorization list operation.
type UpdateCustomerSalesSeriesAuthorizationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Links to add.
	// Authorization is added if it does not exist with this customer and sales series id.
	LinksToSet []*CustomerSalesSeriesLink `protobuf:"bytes,1,rep,name=links_to_set,json=linksToSet" json:"links_to_set,omitempty"`
	// Links to remove. First - customer id, second - sales series id.
	LinksToRemove []*Tuple `protobuf:"bytes,2,rep,name=links_to_remove,json=linksToRemove" json:"links_to_remove,omitempty"`
}

func (x *UpdateCustomerSalesSeriesAuthorizationList) Reset() {
	*x = UpdateCustomerSalesSeriesAuthorizationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerSalesSeriesAuthorizationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerSalesSeriesAuthorizationList) ProtoMessage() {}

func (x *UpdateCustomerSalesSeriesAuthorizationList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerSalesSeriesAuthorizationList.ProtoReflect.Descriptor instead.
func (*UpdateCustomerSalesSeriesAuthorizationList) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateCustomerSalesSeriesAuthorizationList) GetLinksToSet() []*CustomerSalesSeriesLink {
	if x != nil {
		return x.LinksToSet
	}
	return nil
}

func (x *UpdateCustomerSalesSeriesAuthorizationList) GetLinksToRemove() []*Tuple {
	if x != nil {
		return x.LinksToRemove
	}
	return nil
}

// Customer to sales series authorization list result message.
type CustomerSalesSeriesAuthorizationListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of customer to sales series authorization links.
	CustomerSalesSeriesLinks []*CustomerSalesSeriesLink `protobuf:"bytes,1,rep,name=customer_sales_series_links,json=customerSalesSeriesLinks" json:"customer_sales_series_links,omitempty"`
	// This flag is set to true if all results are sent
	// and nothing was filtered out by 'top' parameter.
	IsComplete *bool `protobuf:"varint,2,opt,name=is_complete,json=isComplete,def=1" json:"is_complete,omitempty"`
}

// Default values for CustomerSalesSeriesAuthorizationListResult fields.
const (
	Default_CustomerSalesSeriesAuthorizationListResult_IsComplete = bool(true)
)

func (x *CustomerSalesSeriesAuthorizationListResult) Reset() {
	*x = CustomerSalesSeriesAuthorizationListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerSalesSeriesAuthorizationListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerSalesSeriesAuthorizationListResult) ProtoMessage() {}

func (x *CustomerSalesSeriesAuthorizationListResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerSalesSeriesAuthorizationListResult.ProtoReflect.Descriptor instead.
func (*CustomerSalesSeriesAuthorizationListResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{69}
}

func (x *CustomerSalesSeriesAuthorizationListResult) GetCustomerSalesSeriesLinks() []*CustomerSalesSeriesLink {
	if x != nil {
		return x.CustomerSalesSeriesLinks
	}
	return nil
}

func (x *CustomerSalesSeriesAuthorizationListResult) GetIsComplete() bool {
	if x != nil && x.IsComplete != nil {
		return *x.IsComplete
	}
	return Default_CustomerSalesSeriesAuthorizationListResult_IsComplete
}

// Result of customer to sales series authorization list updation.
type UpdateCustomerSalesSeriesAuthorizationListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCustomerSalesSeriesAuthorizationListResult) Reset() {
	*x = UpdateCustomerSalesSeriesAuthorizationListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCustomerSalesSeriesAuthorizationListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerSalesSeriesAuthorizationListResult) ProtoMessage() {}

func (x *UpdateCustomerSalesSeriesAuthorizationListResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerSalesSeriesAuthorizationListResult.ProtoReflect.Descriptor instead.
func (*UpdateCustomerSalesSeriesAuthorizationListResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{70}
}

// Customer to sales series authorization link.
type CustomerSalesSeriesLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Customer ID.
	CustomerId *string `protobuf:"bytes,1,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	// [required] Sales series ID.
	SalesSeriesId *string `protobuf:"bytes,2,opt,name=sales_series_id,json=salesSeriesId" json:"sales_series_id,omitempty"`
	// [immutable] Sales series name.
	SalesSeriesName *string `protobuf:"bytes,3,opt,name=sales_series_name,json=salesSeriesName" json:"sales_series_name,omitempty"`
	// [immutable] Sales series number.
	SalesSeriesNumber *string `protobuf:"bytes,4,opt,name=sales_series_number,json=salesSeriesNumber" json:"sales_series_number,omitempty"`
}

func (x *CustomerSalesSeriesLink) Reset() {
	*x = CustomerSalesSeriesLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerSalesSeriesLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerSalesSeriesLink) ProtoMessage() {}

func (x *CustomerSalesSeriesLink) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerSalesSeriesLink.ProtoReflect.Descriptor instead.
func (*CustomerSalesSeriesLink) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{71}
}

func (x *CustomerSalesSeriesLink) GetCustomerId() string {
	if x != nil && x.CustomerId != nil {
		return *x.CustomerId
	}
	return ""
}

func (x *CustomerSalesSeriesLink) GetSalesSeriesId() string {
	if x != nil && x.SalesSeriesId != nil {
		return *x.SalesSeriesId
	}
	return ""
}

func (x *CustomerSalesSeriesLink) GetSalesSeriesName() string {
	if x != nil && x.SalesSeriesName != nil {
		return *x.SalesSeriesName
	}
	return ""
}

func (x *CustomerSalesSeriesLink) GetSalesSeriesNumber() string {
	if x != nil && x.SalesSeriesNumber != nil {
		return *x.SalesSeriesNumber
	}
	return ""
}

// Login additional settings request.
type LoginSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
}

func (x *LoginSettingsRequest) Reset() {
	*x = LoginSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSettingsRequest) ProtoMessage() {}

func (x *LoginSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSettingsRequest.ProtoReflect.Descriptor instead.
func (*LoginSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{72}
}

func (x *LoginSettingsRequest) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

// Result of LoginSettingsRequest.
type LoginSettingsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login settings.
	LoginSettings *LoginSettings `protobuf:"bytes,1,opt,name=login_settings,json=loginSettings" json:"login_settings,omitempty"`
}

func (x *LoginSettingsResult) Reset() {
	*x = LoginSettingsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginSettingsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSettingsResult) ProtoMessage() {}

func (x *LoginSettingsResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSettingsResult.ProtoReflect.Descriptor instead.
func (*LoginSettingsResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{73}
}

func (x *LoginSettingsResult) GetLoginSettings() *LoginSettings {
	if x != nil {
		return x.LoginSettings
	}
	return nil
}

// Update Login settings.
type UpdateLoginSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login settings.
	LoginSettings *LoginSettings `protobuf:"bytes,1,opt,name=login_settings,json=loginSettings" json:"login_settings,omitempty"`
}

func (x *UpdateLoginSettings) Reset() {
	*x = UpdateLoginSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoginSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoginSettings) ProtoMessage() {}

func (x *UpdateLoginSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoginSettings.ProtoReflect.Descriptor instead.
func (*UpdateLoginSettings) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{74}
}

func (x *UpdateLoginSettings) GetLoginSettings() *LoginSettings {
	if x != nil {
		return x.LoginSettings
	}
	return nil
}

// Result of UpdateLoginSettings.
type UpdateLoginSettingsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLoginSettingsResult) Reset() {
	*x = UpdateLoginSettingsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoginSettingsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoginSettingsResult) ProtoMessage() {}

func (x *UpdateLoginSettingsResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoginSettingsResult.ProtoReflect.Descriptor instead.
func (*UpdateLoginSettingsResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{75}
}

// Requests login's member ids.
type LoginExchangeMemberIdListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
}

func (x *LoginExchangeMemberIdListRequest) Reset() {
	*x = LoginExchangeMemberIdListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginExchangeMemberIdListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginExchangeMemberIdListRequest) ProtoMessage() {}

func (x *LoginExchangeMemberIdListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginExchangeMemberIdListRequest.ProtoReflect.Descriptor instead.
func (*LoginExchangeMemberIdListRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{76}
}

func (x *LoginExchangeMemberIdListRequest) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

// Requests login's member ids.
type LoginExchangeMemberIdListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Member ids.
	LoginMemberIds []*LoginExchangeMemberId `protobuf:"bytes,1,rep,name=login_member_ids,json=loginMemberIds" json:"login_member_ids,omitempty"`
}

func (x *LoginExchangeMemberIdListResult) Reset() {
	*x = LoginExchangeMemberIdListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginExchangeMemberIdListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginExchangeMemberIdListResult) ProtoMessage() {}

func (x *LoginExchangeMemberIdListResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginExchangeMemberIdListResult.ProtoReflect.Descriptor instead.
func (*LoginExchangeMemberIdListResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{77}
}

func (x *LoginExchangeMemberIdListResult) GetLoginMemberIds() []*LoginExchangeMemberId {
	if x != nil {
		return x.LoginMemberIds
	}
	return nil
}

// Login member id.
type LoginExchangeMemberId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
	// [required] Exchange identifier.
	ExchangeKey *string `protobuf:"bytes,2,opt,name=exchange_key,json=exchangeKey" json:"exchange_key,omitempty"`
	// [required] Exchange member identifier.
	MemberId *string `protobuf:"bytes,3,opt,name=member_id,json=memberId" json:"member_id,omitempty"`
}

func (x *LoginExchangeMemberId) Reset() {
	*x = LoginExchangeMemberId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginExchangeMemberId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginExchangeMemberId) ProtoMessage() {}

func (x *LoginExchangeMemberId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginExchangeMemberId.ProtoReflect.Descriptor instead.
func (*LoginExchangeMemberId) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{78}
}

func (x *LoginExchangeMemberId) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

func (x *LoginExchangeMemberId) GetExchangeKey() string {
	if x != nil && x.ExchangeKey != nil {
		return *x.ExchangeKey
	}
	return ""
}

func (x *LoginExchangeMemberId) GetMemberId() string {
	if x != nil && x.MemberId != nil {
		return *x.MemberId
	}
	return ""
}

// Update login exchange member id list.
type UpdateLoginExchangeMemberIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login id to update member ids.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
	// Member ids to add or change.
	MemberIdsToSet []*LoginExchangeMemberId `protobuf:"bytes,2,rep,name=member_ids_to_set,json=memberIdsToSet" json:"member_ids_to_set,omitempty"`
	// Member ids to remove from login.
	// First - login id, second - exchange key.
	MemberIdsToRemove []*Tuple `protobuf:"bytes,3,rep,name=member_ids_to_remove,json=memberIdsToRemove" json:"member_ids_to_remove,omitempty"`
}

func (x *UpdateLoginExchangeMemberIdList) Reset() {
	*x = UpdateLoginExchangeMemberIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoginExchangeMemberIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoginExchangeMemberIdList) ProtoMessage() {}

func (x *UpdateLoginExchangeMemberIdList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoginExchangeMemberIdList.ProtoReflect.Descriptor instead.
func (*UpdateLoginExchangeMemberIdList) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{79}
}

func (x *UpdateLoginExchangeMemberIdList) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

func (x *UpdateLoginExchangeMemberIdList) GetMemberIdsToSet() []*LoginExchangeMemberId {
	if x != nil {
		return x.MemberIdsToSet
	}
	return nil
}

func (x *UpdateLoginExchangeMemberIdList) GetMemberIdsToRemove() []*Tuple {
	if x != nil {
		return x.MemberIdsToRemove
	}
	return nil
}

// Result of UpdateLoginExchangeMemberIdList.
type UpdateLoginExchangeMemberIdListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLoginExchangeMemberIdListResult) Reset() {
	*x = UpdateLoginExchangeMemberIdListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoginExchangeMemberIdListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoginExchangeMemberIdListResult) ProtoMessage() {}

func (x *UpdateLoginExchangeMemberIdListResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoginExchangeMemberIdListResult.ProtoReflect.Descriptor instead.
func (*UpdateLoginExchangeMemberIdListResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{80}
}

// Activate login operation.
type ActivateLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier to activate.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
}

func (x *ActivateLogin) Reset() {
	*x = ActivateLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateLogin) ProtoMessage() {}

func (x *ActivateLogin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateLogin.ProtoReflect.Descriptor instead.
func (*ActivateLogin) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{81}
}

func (x *ActivateLogin) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

// Deactivate login operation.
type DeactivateLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier to deactivate.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
	// Date and time when login will be deactivated.
	ExpirationTime *int64 `protobuf:"zigzag64,2,opt,name=expiration_time,json=expirationTime" json:"expiration_time,omitempty"`
}

func (x *DeactivateLogin) Reset() {
	*x = DeactivateLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateLogin) ProtoMessage() {}

func (x *DeactivateLogin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateLogin.ProtoReflect.Descriptor instead.
func (*DeactivateLogin) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{82}
}

func (x *DeactivateLogin) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

func (x *DeactivateLogin) GetExpirationTime() int64 {
	if x != nil && x.ExpirationTime != nil {
		return *x.ExpirationTime
	}
	return 0
}

// Result of ActivateLogin
type ActivateLoginResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivateLoginResult) Reset() {
	*x = ActivateLoginResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateLoginResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateLoginResult) ProtoMessage() {}

func (x *ActivateLoginResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateLoginResult.ProtoReflect.Descriptor instead.
func (*ActivateLoginResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{83}
}

// Result of DeactivateLogin
type DeactivateLoginResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivateLoginResult) Reset() {
	*x = DeactivateLoginResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateLoginResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateLoginResult) ProtoMessage() {}

func (x *DeactivateLoginResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateLoginResult.ProtoReflect.Descriptor instead.
func (*DeactivateLoginResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{84}
}

// Erases current credentials of specified types.
type EraseCurrentCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
	// List of credentials to erase.
	// This filed is associated with common_1.CredentialType enum.
	CredentialTypes []uint32 `protobuf:"varint,2,rep,name=credential_types,json=credentialTypes" json:"credential_types,omitempty"`
}

func (x *EraseCurrentCredentials) Reset() {
	*x = EraseCurrentCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EraseCurrentCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EraseCurrentCredentials) ProtoMessage() {}

func (x *EraseCurrentCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EraseCurrentCredentials.ProtoReflect.Descriptor instead.
func (*EraseCurrentCredentials) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{85}
}

func (x *EraseCurrentCredentials) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

func (x *EraseCurrentCredentials) GetCredentialTypes() []uint32 {
	if x != nil {
		return x.CredentialTypes
	}
	return nil
}

// Result of EraseCurrentCredentials
type EraseCurrentCredentialsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EraseCurrentCredentialsResult) Reset() {
	*x = EraseCurrentCredentialsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EraseCurrentCredentialsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EraseCurrentCredentialsResult) ProtoMessage() {}

func (x *EraseCurrentCredentialsResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EraseCurrentCredentialsResult.ProtoReflect.Descriptor instead.
func (*EraseCurrentCredentialsResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{86}
}

// Represents search option for search requests.
type SearchOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Text to search.
	// Empty text is prohibited.
	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	// Search criteria.
	// For each type of search request corresponding enum values should be used.
	// Empty means search by any possible criterion.
	// Regardless 'all match mode' set on search request level, criteria given here match between each other with 'any' mode.
	Criteria []uint32 `protobuf:"varint,2,rep,name=criteria" json:"criteria,omitempty"`
	// Comparing matching rule. Associated with MatchingRule enum.
	// By default all matching rules are used in the following order: EXACT_EQUALITY, STARTS_WITH, ENDS_WITH, CONTAINS.
	MatchingRule *uint32 `protobuf:"varint,3,opt,name=matching_rule,json=matchingRule" json:"matching_rule,omitempty"`
}

func (x *SearchOption) Reset() {
	*x = SearchOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOption) ProtoMessage() {}

func (x *SearchOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOption.ProtoReflect.Descriptor instead.
func (*SearchOption) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{87}
}

func (x *SearchOption) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *SearchOption) GetCriteria() []uint32 {
	if x != nil {
		return x.Criteria
	}
	return nil
}

func (x *SearchOption) GetMatchingRule() uint32 {
	if x != nil && x.MatchingRule != nil {
		return *x.MatchingRule
	}
	return 0
}

// Terminates all open sessions of login.
// When there are no sessions does nothing.
type TerminateLoginSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
}

func (x *TerminateLoginSession) Reset() {
	*x = TerminateLoginSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateLoginSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateLoginSession) ProtoMessage() {}

func (x *TerminateLoginSession) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateLoginSession.ProtoReflect.Descriptor instead.
func (*TerminateLoginSession) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{88}
}

func (x *TerminateLoginSession) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

// Result of EraseCurrentCredentials
type TerminateLoginSessionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TerminateLoginSessionResult) Reset() {
	*x = TerminateLoginSessionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateLoginSessionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateLoginSessionResult) ProtoMessage() {}

func (x *TerminateLoginSessionResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateLoginSessionResult.ProtoReflect.Descriptor instead.
func (*TerminateLoginSessionResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{89}
}

// Represents common message of id and name.
type NamedEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Name.
	Name *Text `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *NamedEntity) Reset() {
	*x = NamedEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamedEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamedEntity) ProtoMessage() {}

func (x *NamedEntity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamedEntity.ProtoReflect.Descriptor instead.
func (*NamedEntity) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{90}
}

func (x *NamedEntity) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *NamedEntity) GetName() *Text {
	if x != nil {
		return x.Name
	}
	return nil
}

// Represents template message for adding/removing links between entities.
type UpdateEntityLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Links to add.
	LinksToSet []*Tuple `protobuf:"bytes,1,rep,name=links_to_set,json=linksToSet" json:"links_to_set,omitempty"`
	// Links to remove.
	LinksToRemove []*Tuple `protobuf:"bytes,2,rep,name=links_to_remove,json=linksToRemove" json:"links_to_remove,omitempty"`
}

func (x *UpdateEntityLinks) Reset() {
	*x = UpdateEntityLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntityLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntityLinks) ProtoMessage() {}

func (x *UpdateEntityLinks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntityLinks.ProtoReflect.Descriptor instead.
func (*UpdateEntityLinks) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{91}
}

func (x *UpdateEntityLinks) GetLinksToSet() []*Tuple {
	if x != nil {
		return x.LinksToSet
	}
	return nil
}

func (x *UpdateEntityLinks) GetLinksToRemove() []*Tuple {
	if x != nil {
		return x.LinksToRemove
	}
	return nil
}

// Result of update entity links operation.
type UpdateEntityLinksResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEntityLinksResult) Reset() {
	*x = UpdateEntityLinksResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntityLinksResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntityLinksResult) ProtoMessage() {}

func (x *UpdateEntityLinksResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntityLinksResult.ProtoReflect.Descriptor instead.
func (*UpdateEntityLinksResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{92}
}

// Represents template message for requesting linked entities for some entity.
type LinkedEntityListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entity identifier.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// optionally restrict results by returning the first 'top' records.
	Top *uint32 `protobuf:"varint,2,opt,name=top" json:"top,omitempty"`
}

func (x *LinkedEntityListRequest) Reset() {
	*x = LinkedEntityListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedEntityListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedEntityListRequest) ProtoMessage() {}

func (x *LinkedEntityListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedEntityListRequest.ProtoReflect.Descriptor instead.
func (*LinkedEntityListRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{93}
}

func (x *LinkedEntityListRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LinkedEntityListRequest) GetTop() uint32 {
	if x != nil && x.Top != nil {
		return *x.Top
	}
	return 0
}

// Result of linked entities request operation.
type LinkedEntityListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*NamedEntity `protobuf:"bytes,1,rep,name=entities" json:"entities,omitempty"`
	// This flag is set to true if all results are sent
	// and nothing was filtered out by 'top' parameter.
	IsComplete *bool `protobuf:"varint,2,opt,name=is_complete,json=isComplete,def=1" json:"is_complete,omitempty"`
}

// Default values for LinkedEntityListResult fields.
const (
	Default_LinkedEntityListResult_IsComplete = bool(true)
)

func (x *LinkedEntityListResult) Reset() {
	*x = LinkedEntityListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedEntityListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedEntityListResult) ProtoMessage() {}

func (x *LinkedEntityListResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedEntityListResult.ProtoReflect.Descriptor instead.
func (*LinkedEntityListResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{94}
}

func (x *LinkedEntityListResult) GetEntities() []*NamedEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *LinkedEntityListResult) GetIsComplete() bool {
	if x != nil && x.IsComplete != nil {
		return *x.IsComplete
	}
	return Default_LinkedEntityListResult_IsComplete
}

// Common message for sales series list result.
type SalesSeriesListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SalesSeries []*SalesSeries `protobuf:"bytes,1,rep,name=sales_series,json=salesSeries" json:"sales_series,omitempty"`
	// This flag is set to true if all results are sent
	// and nothing was filtered out by 'top' parameter.
	IsComplete *bool `protobuf:"varint,2,opt,name=is_complete,json=isComplete,def=1" json:"is_complete,omitempty"`
}

// Default values for SalesSeriesListResult fields.
const (
	Default_SalesSeriesListResult_IsComplete = bool(true)
)

func (x *SalesSeriesListResult) Reset() {
	*x = SalesSeriesListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesSeriesListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesSeriesListResult) ProtoMessage() {}

func (x *SalesSeriesListResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesSeriesListResult.ProtoReflect.Descriptor instead.
func (*SalesSeriesListResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{95}
}

func (x *SalesSeriesListResult) GetSalesSeries() []*SalesSeries {
	if x != nil {
		return x.SalesSeries
	}
	return nil
}

func (x *SalesSeriesListResult) GetIsComplete() bool {
	if x != nil && x.IsComplete != nil {
		return *x.IsComplete
	}
	return Default_SalesSeriesListResult_IsComplete
}

// Represents sales series.
type SalesSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sales series ID.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Sales series name.
	SalesSeriesName *string `protobuf:"bytes,2,opt,name=sales_series_name,json=salesSeriesName" json:"sales_series_name,omitempty"`
	// Sales series number.
	SalesSeriesNumber *string `protobuf:"bytes,3,opt,name=sales_series_number,json=salesSeriesNumber" json:"sales_series_number,omitempty"`
}

func (x *SalesSeries) Reset() {
	*x = SalesSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalesSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalesSeries) ProtoMessage() {}

func (x *SalesSeries) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalesSeries.ProtoReflect.Descriptor instead.
func (*SalesSeries) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{96}
}

func (x *SalesSeries) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *SalesSeries) GetSalesSeriesName() string {
	if x != nil && x.SalesSeriesName != nil {
		return *x.SalesSeriesName
	}
	return ""
}

func (x *SalesSeries) GetSalesSeriesNumber() string {
	if x != nil && x.SalesSeriesNumber != nil {
		return *x.SalesSeriesNumber
	}
	return ""
}

// Parameters of external authentication.
type ExternalAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] ID of external authentication partner, if any.
	PartnerId *string `protobuf:"bytes,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// [required] Username as registered by authentication partner, if any (max length = 32).
	// UTF8 encoding string.
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (x *ExternalAuth) Reset() {
	*x = ExternalAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAuth) ProtoMessage() {}

func (x *ExternalAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAuth.ProtoReflect.Descriptor instead.
func (*ExternalAuth) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{97}
}

func (x *ExternalAuth) GetPartnerId() string {
	if x != nil && x.PartnerId != nil {
		return *x.PartnerId
	}
	return ""
}

func (x *ExternalAuth) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

// Request for update login billing custom data.
type UpdateLoginBillingCustomData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
	// [required] Login billing custom data.
	LoginBillingCustomData []*LoginBillingCustomData `protobuf:"bytes,2,rep,name=login_billing_custom_data,json=loginBillingCustomData" json:"login_billing_custom_data,omitempty"`
}

func (x *UpdateLoginBillingCustomData) Reset() {
	*x = UpdateLoginBillingCustomData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoginBillingCustomData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoginBillingCustomData) ProtoMessage() {}

func (x *UpdateLoginBillingCustomData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoginBillingCustomData.ProtoReflect.Descriptor instead.
func (*UpdateLoginBillingCustomData) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{98}
}

func (x *UpdateLoginBillingCustomData) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

func (x *UpdateLoginBillingCustomData) GetLoginBillingCustomData() []*LoginBillingCustomData {
	if x != nil {
		return x.LoginBillingCustomData
	}
	return nil
}

// Result of UpdateLoginBillingCustomData.
type UpdateLoginBillingCustomDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLoginBillingCustomDataResult) Reset() {
	*x = UpdateLoginBillingCustomDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoginBillingCustomDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoginBillingCustomDataResult) ProtoMessage() {}

func (x *UpdateLoginBillingCustomDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoginBillingCustomDataResult.ProtoReflect.Descriptor instead.
func (*UpdateLoginBillingCustomDataResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{99}
}

type LoginBillingCustomData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Account identifier.
	AccountId *string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Billing custom data.
	// Maximum count is 3 (max length = 256).
	BillingCustomData []string `protobuf:"bytes,2,rep,name=billing_custom_data,json=billingCustomData" json:"billing_custom_data,omitempty"`
}

func (x *LoginBillingCustomData) Reset() {
	*x = LoginBillingCustomData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBillingCustomData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBillingCustomData) ProtoMessage() {}

func (x *LoginBillingCustomData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBillingCustomData.ProtoReflect.Descriptor instead.
func (*LoginBillingCustomData) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{100}
}

func (x *LoginBillingCustomData) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *LoginBillingCustomData) GetBillingCustomData() []string {
	if x != nil {
		return x.BillingCustomData
	}
	return nil
}

// Request of login billing custom data.
type LoginBillingCustomDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [required] Login identifier.
	LoginId *string `protobuf:"bytes,1,opt,name=login_id,json=loginId" json:"login_id,omitempty"`
}

func (x *LoginBillingCustomDataRequest) Reset() {
	*x = LoginBillingCustomDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBillingCustomDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBillingCustomDataRequest) ProtoMessage() {}

func (x *LoginBillingCustomDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBillingCustomDataRequest.ProtoReflect.Descriptor instead.
func (*LoginBillingCustomDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{101}
}

func (x *LoginBillingCustomDataRequest) GetLoginId() string {
	if x != nil && x.LoginId != nil {
		return *x.LoginId
	}
	return ""
}

// Result of LoginBillingCustomDataRequest.
type LoginBillingCustomDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Login billing custom data.
	LoginBillingCustomData []*LoginBillingCustomData `protobuf:"bytes,1,rep,name=login_billing_custom_data,json=loginBillingCustomData" json:"login_billing_custom_data,omitempty"`
}

func (x *LoginBillingCustomDataResult) Reset() {
	*x = LoginBillingCustomDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_common_1_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginBillingCustomDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginBillingCustomDataResult) ProtoMessage() {}

func (x *LoginBillingCustomDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_common_1_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginBillingCustomDataResult.ProtoReflect.Descriptor instead.
func (*LoginBillingCustomDataResult) Descriptor() ([]byte, []int) {
	return file_proto_common_1_proto_rawDescGZIP(), []int{102}
}

func (x *LoginBillingCustomDataResult) GetLoginBillingCustomData() []*LoginBillingCustomData {
	if x != nil {
		return x.LoginBillingCustomData
	}
	return nil
}

var File_proto_common_1_proto protoreflect.FileDescriptor

var file_proto_common_1_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31,
	0x22, 0x5a, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xf9, 0x01, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x74,
	0x63, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x47, 0x10, 0x04, 0x22, 0xe7, 0x03, 0x0a, 0x05, 0x4c, 0x6f, 0x67,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x36, 0x0a,
	0x17, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x64, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x43, 0x0a,
	0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x19, 0x0a, 0x15, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c,
	0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4a, 0x4f, 0x49, 0x4e,
	0x10, 0x02, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x72,
	0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x08, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x66, 0x66, 0x22, 0xbb, 0x02, 0x0a, 0x10, 0x4f,
	0x62, 0x74, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x6d, 0x6f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x62, 0x63, 0x63, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x63, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x46, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x80, 0x02, 0x0a, 0x16, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x6d, 0x6f, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x11, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x74, 0x63, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12,
	0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7c, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x33, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x12,
	0x26, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x20, 0x0a, 0x1e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x19, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x80, 0x07, 0x0a, 0x12, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31,
	0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x12, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2c,
	0x0a, 0x09, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x09, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x48, 0x0a,
	0x20, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x57, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x0f, 0x0a,
	0x0b, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x10, 0x04,
	0x22, 0x3b, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x54, 0x52,
	0x41, 0x44, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x52, 0x45, 0x45, 0x5f,
	0x46, 0x4f, 0x52, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x52, 0x53, 0x10, 0x02, 0x22, 0x86, 0x01,
	0x0a, 0x16, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x1a, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x73, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x39, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbe, 0x01, 0x0a,
	0x13, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x14, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xf0, 0x01,
	0x0a, 0x15, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x5d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x43,
	0x4c, 0x55, 0x44, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x4e, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x49, 0x43, 0x4b, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x4f,
	0x44, 0x55, 0x43, 0x54, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x05,
	0x22, 0x2a, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x07, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x13, 0x6f, 0x62, 0x73,
	0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x11, 0x6f, 0x62, 0x73, 0x6f,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x12, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x6f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x29, 0x0a, 0x0e, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x6f, 0x62, 0x73,
	0x6f, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72,
	0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x70,
	0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x49, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x70, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x70, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x4f,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x10, 0x01, 0x22,
	0x4a, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49,
	0x58, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x4c, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x04, 0x22, 0xcf, 0x04, 0x0a, 0x0d,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x41, 0x0a, 0x1d, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x3c, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x65, 0x76,
	0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x76, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x1b, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x18, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x1f, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1c, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc0, 0x02,
	0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x14, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x75, 0x74, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x74, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x14, 0x6f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x42, 0x02, 0x18, 0x01, 0x52, 0x11, 0x6f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x55, 0x74, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x4c, 0x0a, 0x13, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x62,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x12, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x62, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x61, 0x69, 0x76,
	0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x61, 0x69, 0x76, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x22, 0xae, 0x03, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x6f, 0x62,
	0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x18, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x16, 0x6f, 0x62, 0x73, 0x6f, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2b, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52,
	0x0c, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xc5, 0x01,
	0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x41, 0x4c, 0x45, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x4e, 0x55, 0x4d,
	0x42, 0x45, 0x52, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x5f, 0x53,
	0x45, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x41, 0x4c, 0x45, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x49, 0x45, 0x53, 0x5f, 0x49, 0x44, 0x10,
	0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45, 0x52, 0x5f, 0x49, 0x44,
	0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x52, 0x41, 0x47, 0x45, 0x5f,
	0x49, 0x44, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x52, 0x41, 0x47,
	0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4c, 0x41, 0x53,
	0x53, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x44, 0x4f, 0x4d,
	0x41, 0x49, 0x4e, 0x10, 0x0c, 0x22, 0xdb, 0x02, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x72, 0x79, 0x22, 0x8c, 0x04, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x77, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x18, 0x6f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x6f, 0x62, 0x73, 0x6f, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x17, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x19, 0x6f, 0x62, 0x73,
	0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x16, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x5d, 0x0a, 0x1c, 0x6e,
	0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x19, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x20, 0x6f, 0x62,
	0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x1c, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x57, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e,
	0x65, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x7a,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x43, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x45, 0x57, 0x10, 0x03, 0x22, 0xee, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x66, 0x61, 0x78,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x31, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x03, 0x66, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x22, 0x1f, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x21, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x04, 0x0a, 0x08, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63,
	0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x4d, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x24, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x31, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x09, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41,
	0x4c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4a, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x54,
	0x52, 0x55, 0x53, 0x54, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x52, 0x50, 0x4f, 0x52,
	0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52,
	0x53, 0x48, 0x49, 0x50, 0x10, 0x06, 0x22, 0x45, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x45,
	0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x52, 0x41, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x52, 0x10, 0x04, 0x22, 0xbf, 0x02,
	0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x6f, 0x62, 0x73, 0x6f, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x3c, 0x0a, 0x18, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x16, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x3d,
	0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a,
	0x0e, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x61, 0x6c,
	0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x06, 0x0a, 0x02,
	0x49, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x05, 0x22,
	0xb8, 0x02, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x22, 0x81, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12,
	0x3f, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x10,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x22, 0x20, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x17, 0x0a,
	0x15, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x30, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x22,
	0x1c, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4e, 0x0a,
	0x12, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1a, 0x0a,
	0x18, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x1c, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x74, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x74, 0x6f, 0x55, 0x74, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x13, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x12, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x1c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x63,
	0x0a, 0x1a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x17, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x53, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f,
	0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1c, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x22,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x27, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x24, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x19, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5d, 0x0a, 0x18,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0e, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0xaf, 0x02, 0x0a, 0x18,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x6f, 0x62, 0x73, 0x6f,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x3c, 0x0a, 0x18, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x42, 0x02, 0x18, 0x01, 0x52, 0x16, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12,
	0x3d, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0c, 0x61,
	0x6c, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x0e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x42,
	0x52, 0x4f, 0x4b, 0x45, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x04, 0x22, 0x87, 0x02,
	0x0a, 0x1d, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x4b, 0x0a, 0x05, 0x54, 0x75, 0x70, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x68, 0x69, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x2b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x22,
	0xaa, 0x01, 0x0a, 0x2a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x54, 0x6f,
	0x53, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0d, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0xb5, 0x01, 0x0a,
	0x2a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x60, 0x0a, 0x1b, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x18, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x25, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x30, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x17, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x14, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x13,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0x55, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x0d, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x20, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x1f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x49, 0x0a, 0x10, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x72, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x54, 0x6f,
	0x53, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x14, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x75, 0x70,
	0x6c, 0x65, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x54, 0x6f, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2a,
	0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x0f, 0x44, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x5f, 0x0a, 0x17, 0x45, 0x72, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x45, 0x72, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x66, 0x0a, 0x0c, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e,
	0x54, 0x41, 0x49, 0x4e, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4e, 0x44, 0x53,
	0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x58, 0x41, 0x43, 0x54,
	0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x49,
	0x4e, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x55, 0x4c, 0x45, 0x10,
	0x04, 0x22, 0x32, 0x0a, 0x15, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x0c,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x75,
	0x70, 0x6c, 0x65, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x74, 0x12,
	0x37, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x31, 0x2e, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0d, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a, 0x17, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x6f, 0x70,
	0x22, 0x72, 0x0a, 0x16, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x15, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a,
	0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72,
	0x75, 0x65, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x79,
	0x0a, 0x0b, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x49, 0x0a, 0x0c, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x5b, 0x0a, 0x19, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x16, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a,
	0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x67, 0x0a, 0x16, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x1d,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x1c, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5b, 0x0a, 0x19, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x16, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x2a, 0x2b, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x02, 0x2a, 0x43, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x51, 0x47, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x52,
	0x4f, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x51, 0x47, 0x5f,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x51, 0x47, 0x5f,
	0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x04, 0x2a, 0x5c, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x15, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0xc9, 0x01, 0x12,
	0x15, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x4f,
	0x49, 0x4e, 0x54, 0x10, 0xca, 0x01, 0x12, 0x0d, 0x0a, 0x08, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0xcb, 0x01, 0x2a, 0x78, 0x0a, 0x1a, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57,
	0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x54, 0x55, 0x50, 0x5f, 0x53,
	0x45, 0x43, 0x4f, 0x4e, 0x44, 0x5f, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1b,
	0x0a, 0x17, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x49, 0x47, 0x4e, 0x5f, 0x41, 0x47, 0x52, 0x45, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x2a,
	0x38, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44,
	0x5f, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x2a, 0x3c, 0x0a, 0x0a, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x45, 0x52, 0x10, 0x04, 0x2a, 0x91, 0x02, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x4f, 0x47, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x4c, 0x4f, 0x47, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f, 0x5f, 0x4f, 0x4e, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x67, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x68,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x55, 0x54, 0x49, 0x4e, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x69, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x6a, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x4f, 0x55, 0x54, 0x10, 0x6b,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x5f,
	0x4c, 0x4f, 0x43, 0x4b, 0x4f, 0x55, 0x54, 0x10, 0x6c, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x5f, 0x46, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x6d, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x4e,
	0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x5f,
	0x41, 0x47, 0x52, 0x45, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x6f, 0x2a, 0x38, 0x0a, 0x0f, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x51, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x52, 0x4f, 0x4b, 0x45,
	0x52, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x41, 0x4c, 0x45, 0x53, 0x5f,
	0x52, 0x45, 0x50, 0x10, 0x03, 0x2a, 0x78, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x47,
	0x49, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x45,
	0x41, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x32, 0x46, 0x41, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x52, 0x41, 0x53, 0x45, 0x5f, 0x32, 0x46, 0x41, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x45,
	0x52, 0x41, 0x53, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x06, 0x42,
	0x10, 0x5a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x31,
}

var (
	file_proto_common_1_proto_rawDescOnce sync.Once
	file_proto_common_1_proto_rawDescData = file_proto_common_1_proto_rawDesc
)

func file_proto_common_1_proto_rawDescGZIP() []byte {
	file_proto_common_1_proto_rawDescOnce.Do(func() {
		file_proto_common_1_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_common_1_proto_rawDescData)
	})
	return file_proto_common_1_proto_rawDescData
}

var file_proto_common_1_proto_enumTypes = make([]protoimpl.EnumInfo, 23)
var file_proto_common_1_proto_msgTypes = make([]protoimpl.MessageInfo, 103)
var file_proto_common_1_proto_goTypes = []interface{}{
	(OperationStatus)(0),                                     // 0: common_1.OperationStatus
	(LoginDomain)(0),                                         // 1: common_1.LoginDomain
	(CommonLookupPropertyType)(0),                            // 2: common_1.CommonLookupPropertyType
	(AuthServerSpecialOperation)(0),                          // 3: common_1.AuthServerSpecialOperation
	(CredentialType)(0),                                      // 4: common_1.CredentialType
	(EntityType)(0),                                          // 5: common_1.EntityType
	(LogonResultCode)(0),                                     // 6: common_1.LogonResultCode
	(AdminLoginScope)(0),                                     // 7: common_1.AdminLoginScope
	(AuthActivityType)(0),                                    // 8: common_1.AuthActivityType
	(UserMessage_MessageType)(0),                             // 9: common_1.UserMessage.MessageType
	(Logon_SessionSetting)(0),                                // 10: common_1.Logon.SessionSetting
	(EntitlementService_AuthorizationType)(0),                // 11: common_1.EntitlementService.AuthorizationType
	(EntitlementService_ServiceOption)(0),                    // 12: common_1.EntitlementService.ServiceOption
	(EntitlementConstraint_Type)(0),                          // 13: common_1.EntitlementConstraint.Type
	(User_SubscriberType)(0),                                 // 14: common_1.User.SubscriberType
	(User_LoginClass)(0),                                     // 15: common_1.User.LoginClass
	(UserSearchRequest_SearchCriteria)(0),                    // 16: common_1.UserSearchRequest.SearchCriteria
	(Address_AddressStatus)(0),                               // 17: common_1.Address.AddressStatus
	(Customer_LegalType)(0),                                  // 18: common_1.Customer.LegalType
	(Customer_ProfileType)(0),                                // 19: common_1.Customer.ProfileType
	(CustomerSearchRequest_SearchCriteria)(0),                // 20: common_1.CustomerSearchRequest.SearchCriteria
	(SalesSeriesSearchRequest_SearchCriteria)(0),             // 21: common_1.SalesSeriesSearchRequest.SearchCriteria
	(SearchOption_MatchingRule)(0),                           // 22: common_1.SearchOption.MatchingRule
	(*Text)(nil),                                             // 23: common_1.Text
	(*UserMessage)(nil),                                      // 24: common_1.UserMessage
	(*Logon)(nil),                                            // 25: common_1.Logon
	(*RestoreOrJoinSession)(nil),                             // 26: common_1.RestoreOrJoinSession
	(*Logoff)(nil),                                           // 27: common_1.Logoff
	(*ObtainDemoAccess)(nil),                                 // 28: common_1.ObtainDemoAccess
	(*Credentials)(nil),                                      // 29: common_1.Credentials
	(*ObtainDemoAccessResult)(nil),                           // 30: common_1.ObtainDemoAccessResult
	(*LogonResult)(nil),                                      // 31: common_1.LogonResult
	(*RestoreOrJoinSessionResult)(nil),                       // 32: common_1.RestoreOrJoinSessionResult
	(*LoggedOff)(nil),                                        // 33: common_1.LoggedOff
	(*UserEntitlementServiceRequest)(nil),                    // 34: common_1.UserEntitlementServiceRequest
	(*EntitlementCategoryListRequest)(nil),                   // 35: common_1.EntitlementCategoryListRequest
	(*EntitlementServiceRequest)(nil),                        // 36: common_1.EntitlementServiceRequest
	(*EntitlementServiceListRequest)(nil),                    // 37: common_1.EntitlementServiceListRequest
	(*EntitlementService)(nil),                               // 38: common_1.EntitlementService
	(*EntitlementServiceItem)(nil),                           // 39: common_1.EntitlementServiceItem
	(*EntitlementServiceItemType)(nil),                       // 40: common_1.EntitlementServiceItemType
	(*Price)(nil),                                            // 41: common_1.Price
	(*EntitlementCategory)(nil),                              // 42: common_1.EntitlementCategory
	(*EntitlementConstraint)(nil),                            // 43: common_1.EntitlementConstraint
	(*UserInfoRequest)(nil),                                  // 44: common_1.UserInfoRequest
	(*User)(nil),                                             // 45: common_1.User
	(*LoginSettings)(nil),                                    // 46: common_1.LoginSettings
	(*UserEntitlementService)(nil),                           // 47: common_1.UserEntitlementService
	(*AssignedBrokerage)(nil),                                // 48: common_1.AssignedBrokerage
	(*UserSearchRequest)(nil),                                // 49: common_1.UserSearchRequest
	(*UserSearchResultRecord)(nil),                           // 50: common_1.UserSearchResultRecord
	(*CloneUser)(nil),                                        // 51: common_1.CloneUser
	(*CloneUserResult)(nil),                                  // 52: common_1.CloneUserResult
	(*Address)(nil),                                          // 53: common_1.Address
	(*ContactInformation)(nil),                               // 54: common_1.ContactInformation
	(*Email)(nil),                                            // 55: common_1.Email
	(*Phone)(nil),                                            // 56: common_1.Phone
	(*CustomerRequest)(nil),                                  // 57: common_1.CustomerRequest
	(*Customer)(nil),                                         // 58: common_1.Customer
	(*CustomerSearchRequest)(nil),                            // 59: common_1.CustomerSearchRequest
	(*CustomerSearchResultRecord)(nil),                       // 60: common_1.CustomerSearchResultRecord
	(*CreateCustomer)(nil),                                   // 61: common_1.CreateCustomer
	(*UpdateCustomer)(nil),                                   // 62: common_1.UpdateCustomer
	(*RemoveCustomer)(nil),                                   // 63: common_1.RemoveCustomer
	(*RestoreCustomer)(nil),                                  // 64: common_1.RestoreCustomer
	(*CreateCustomerResult)(nil),                             // 65: common_1.CreateCustomerResult
	(*UpdateCustomerResult)(nil),                             // 66: common_1.UpdateCustomerResult
	(*RemoveCustomerResult)(nil),                             // 67: common_1.RemoveCustomerResult
	(*RestoreCustomerResult)(nil),                            // 68: common_1.RestoreCustomerResult
	(*CreateUser)(nil),                                       // 69: common_1.CreateUser
	(*UpdateUser)(nil),                                       // 70: common_1.UpdateUser
	(*RemoveUser)(nil),                                       // 71: common_1.RemoveUser
	(*RestoreUser)(nil),                                      // 72: common_1.RestoreUser
	(*CreateUserResult)(nil),                                 // 73: common_1.CreateUserResult
	(*UpdateUserResult)(nil),                                 // 74: common_1.UpdateUserResult
	(*RestoreUserResult)(nil),                                // 75: common_1.RestoreUserResult
	(*RemoveUserResult)(nil),                                 // 76: common_1.RemoveUserResult
	(*LinkUserToCustomer)(nil),                               // 77: common_1.LinkUserToCustomer
	(*LinkUserToCustomerResult)(nil),                         // 78: common_1.LinkUserToCustomerResult
	(*RestrictedEntitlementService)(nil),                     // 79: common_1.RestrictedEntitlementService
	(*ModifyUserEntitlementService)(nil),                     // 80: common_1.ModifyUserEntitlementService
	(*ModifyUserEntitlementServiceResult)(nil),               // 81: common_1.ModifyUserEntitlementServiceResult
	(*GetUniqueUsernameRequest)(nil),                         // 82: common_1.GetUniqueUsernameRequest
	(*UniqueUsernameResult)(nil),                             // 83: common_1.UniqueUsernameResult
	(*LookupProperty)(nil),                                   // 84: common_1.LookupProperty
	(*LookupPropertyListRequest)(nil),                        // 85: common_1.LookupPropertyListRequest
	(*LookupPropertyListResult)(nil),                         // 86: common_1.LookupPropertyListResult
	(*SalesSeriesSearchRequest)(nil),                         // 87: common_1.SalesSeriesSearchRequest
	(*SalesSeriesSearchResultRecord)(nil),                    // 88: common_1.SalesSeriesSearchResultRecord
	(*Tuple)(nil),                                            // 89: common_1.Tuple
	(*CustomerSalesSeriesAuthorizationListRequest)(nil),      // 90: common_1.CustomerSalesSeriesAuthorizationListRequest
	(*UpdateCustomerSalesSeriesAuthorizationList)(nil),       // 91: common_1.UpdateCustomerSalesSeriesAuthorizationList
	(*CustomerSalesSeriesAuthorizationListResult)(nil),       // 92: common_1.CustomerSalesSeriesAuthorizationListResult
	(*UpdateCustomerSalesSeriesAuthorizationListResult)(nil), // 93: common_1.UpdateCustomerSalesSeriesAuthorizationListResult
	(*CustomerSalesSeriesLink)(nil),                          // 94: common_1.CustomerSalesSeriesLink
	(*LoginSettingsRequest)(nil),                             // 95: common_1.LoginSettingsRequest
	(*LoginSettingsResult)(nil),                              // 96: common_1.LoginSettingsResult
	(*UpdateLoginSettings)(nil),                              // 97: common_1.UpdateLoginSettings
	(*UpdateLoginSettingsResult)(nil),                        // 98: common_1.UpdateLoginSettingsResult
	(*LoginExchangeMemberIdListRequest)(nil),                 // 99: common_1.LoginExchangeMemberIdListRequest
	(*LoginExchangeMemberIdListResult)(nil),                  // 100: common_1.LoginExchangeMemberIdListResult
	(*LoginExchangeMemberId)(nil),                            // 101: common_1.LoginExchangeMemberId
	(*UpdateLoginExchangeMemberIdList)(nil),                  // 102: common_1.UpdateLoginExchangeMemberIdList
	(*UpdateLoginExchangeMemberIdListResult)(nil),            // 103: common_1.UpdateLoginExchangeMemberIdListResult
	(*ActivateLogin)(nil),                                    // 104: common_1.ActivateLogin
	(*DeactivateLogin)(nil),                                  // 105: common_1.DeactivateLogin
	(*ActivateLoginResult)(nil),                              // 106: common_1.ActivateLoginResult
	(*DeactivateLoginResult)(nil),                            // 107: common_1.DeactivateLoginResult
	(*EraseCurrentCredentials)(nil),                          // 108: common_1.EraseCurrentCredentials
	(*EraseCurrentCredentialsResult)(nil),                    // 109: common_1.EraseCurrentCredentialsResult
	(*SearchOption)(nil),                                     // 110: common_1.SearchOption
	(*TerminateLoginSession)(nil),                            // 111: common_1.TerminateLoginSession
	(*TerminateLoginSessionResult)(nil),                      // 112: common_1.TerminateLoginSessionResult
	(*NamedEntity)(nil),                                      // 113: common_1.NamedEntity
	(*UpdateEntityLinks)(nil),                                // 114: common_1.UpdateEntityLinks
	(*UpdateEntityLinksResult)(nil),                          // 115: common_1.UpdateEntityLinksResult
	(*LinkedEntityListRequest)(nil),                          // 116: common_1.LinkedEntityListRequest
	(*LinkedEntityListResult)(nil),                           // 117: common_1.LinkedEntityListResult
	(*SalesSeriesListResult)(nil),                            // 118: common_1.SalesSeriesListResult
	(*SalesSeries)(nil),                                      // 119: common_1.SalesSeries
	(*ExternalAuth)(nil),                                     // 120: common_1.ExternalAuth
	(*UpdateLoginBillingCustomData)(nil),                     // 121: common_1.UpdateLoginBillingCustomData
	(*UpdateLoginBillingCustomDataResult)(nil),               // 122: common_1.UpdateLoginBillingCustomDataResult
	(*LoginBillingCustomData)(nil),                           // 123: common_1.LoginBillingCustomData
	(*LoginBillingCustomDataRequest)(nil),                    // 124: common_1.LoginBillingCustomDataRequest
	(*LoginBillingCustomDataResult)(nil),                     // 125: common_1.LoginBillingCustomDataResult
}
var file_proto_common_1_proto_depIdxs = []int32{
	23,  // 0: common_1.UserMessage.text:type_name -> common_1.Text
	55,  // 1: common_1.ObtainDemoAccess.email:type_name -> common_1.Email
	56,  // 2: common_1.ObtainDemoAccess.phone:type_name -> common_1.Phone
	55,  // 3: common_1.ObtainDemoAccess.email_bcc:type_name -> common_1.Email
	29,  // 4: common_1.ObtainDemoAccessResult.credentials:type_name -> common_1.Credentials
	23,  // 5: common_1.ObtainDemoAccessResult.error_message:type_name -> common_1.Text
	23,  // 6: common_1.LogonResult.error_message:type_name -> common_1.Text
	23,  // 7: common_1.RestoreOrJoinSessionResult.error_message:type_name -> common_1.Text
	23,  // 8: common_1.LoggedOff.reason:type_name -> common_1.Text
	23,  // 9: common_1.EntitlementService.name:type_name -> common_1.Text
	41,  // 10: common_1.EntitlementService.price:type_name -> common_1.Price
	23,  // 11: common_1.EntitlementService.description:type_name -> common_1.Text
	43,  // 12: common_1.EntitlementService.constraint:type_name -> common_1.EntitlementConstraint
	23,  // 13: common_1.EntitlementService.agreement:type_name -> common_1.Text
	39,  // 14: common_1.EntitlementService.items:type_name -> common_1.EntitlementServiceItem
	40,  // 15: common_1.EntitlementServiceItem.type:type_name -> common_1.EntitlementServiceItemType
	23,  // 16: common_1.EntitlementServiceItem.name:type_name -> common_1.Text
	23,  // 17: common_1.EntitlementServiceItemType.name:type_name -> common_1.Text
	23,  // 18: common_1.EntitlementServiceItemType.description:type_name -> common_1.Text
	23,  // 19: common_1.EntitlementCategory.name:type_name -> common_1.Text
	42,  // 20: common_1.EntitlementCategory.sub_category:type_name -> common_1.EntitlementCategory
	120, // 21: common_1.LoginSettings.external_auth:type_name -> common_1.ExternalAuth
	48,  // 22: common_1.UserEntitlementService.assigned_brokerages:type_name -> common_1.AssignedBrokerage
	110, // 23: common_1.UserSearchRequest.search_options:type_name -> common_1.SearchOption
	53,  // 24: common_1.CloneUser.obsolete_new_user_address:type_name -> common_1.Address
	54,  // 25: common_1.CloneUser.new_user_contact_information:type_name -> common_1.ContactInformation
	55,  // 26: common_1.ContactInformation.email:type_name -> common_1.Email
	56,  // 27: common_1.ContactInformation.phone:type_name -> common_1.Phone
	56,  // 28: common_1.ContactInformation.fax:type_name -> common_1.Phone
	53,  // 29: common_1.ContactInformation.address:type_name -> common_1.Address
	54,  // 30: common_1.Customer.contact_information:type_name -> common_1.ContactInformation
	110, // 31: common_1.CustomerSearchRequest.search_options:type_name -> common_1.SearchOption
	58,  // 32: common_1.CreateCustomer.customer:type_name -> common_1.Customer
	58,  // 33: common_1.UpdateCustomer.customer:type_name -> common_1.Customer
	58,  // 34: common_1.UpdateCustomer.original_customer:type_name -> common_1.Customer
	45,  // 35: common_1.CreateUser.user:type_name -> common_1.User
	45,  // 36: common_1.UpdateUser.user:type_name -> common_1.User
	45,  // 37: common_1.UpdateUser.original_user:type_name -> common_1.User
	48,  // 38: common_1.RestrictedEntitlementService.assigned_brokerages:type_name -> common_1.AssignedBrokerage
	79,  // 39: common_1.ModifyUserEntitlementService.entitlement_service_to_set:type_name -> common_1.RestrictedEntitlementService
	79,  // 40: common_1.ModifyUserEntitlementServiceResult.obsolete_restricted_entitlement_service:type_name -> common_1.RestrictedEntitlementService
	23,  // 41: common_1.LookupProperty.name:type_name -> common_1.Text
	23,  // 42: common_1.LookupProperty.description:type_name -> common_1.Text
	84,  // 43: common_1.LookupPropertyListResult.lookup_property:type_name -> common_1.LookupProperty
	110, // 44: common_1.SalesSeriesSearchRequest.search_options:type_name -> common_1.SearchOption
	94,  // 45: common_1.UpdateCustomerSalesSeriesAuthorizationList.links_to_set:type_name -> common_1.CustomerSalesSeriesLink
	89,  // 46: common_1.UpdateCustomerSalesSeriesAuthorizationList.links_to_remove:type_name -> common_1.Tuple
	94,  // 47: common_1.CustomerSalesSeriesAuthorizationListResult.customer_sales_series_links:type_name -> common_1.CustomerSalesSeriesLink
	46,  // 48: common_1.LoginSettingsResult.login_settings:type_name -> common_1.LoginSettings
	46,  // 49: common_1.UpdateLoginSettings.login_settings:type_name -> common_1.LoginSettings
	101, // 50: common_1.LoginExchangeMemberIdListResult.login_member_ids:type_name -> common_1.LoginExchangeMemberId
	101, // 51: common_1.UpdateLoginExchangeMemberIdList.member_ids_to_set:type_name -> common_1.LoginExchangeMemberId
	89,  // 52: common_1.UpdateLoginExchangeMemberIdList.member_ids_to_remove:type_name -> common_1.Tuple
	23,  // 53: common_1.NamedEntity.name:type_name -> common_1.Text
	89,  // 54: common_1.UpdateEntityLinks.links_to_set:type_name -> common_1.Tuple
	89,  // 55: common_1.UpdateEntityLinks.links_to_remove:type_name -> common_1.Tuple
	113, // 56: common_1.LinkedEntityListResult.entities:type_name -> common_1.NamedEntity
	119, // 57: common_1.SalesSeriesListResult.sales_series:type_name -> common_1.SalesSeries
	123, // 58: common_1.UpdateLoginBillingCustomData.login_billing_custom_data:type_name -> common_1.LoginBillingCustomData
	123, // 59: common_1.LoginBillingCustomDataResult.login_billing_custom_data:type_name -> common_1.LoginBillingCustomData
	60,  // [60:60] is the sub-list for method output_type
	60,  // [60:60] is the sub-list for method input_type
	60,  // [60:60] is the sub-list for extension type_name
	60,  // [60:60] is the sub-list for extension extendee
	0,   // [0:60] is the sub-list for field type_name
}

func init() { file_proto_common_1_proto_init() }
func file_proto_common_1_proto_init() {
	if File_proto_common_1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_common_1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreOrJoinSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObtainDemoAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObtainDemoAccessResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogonResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreOrJoinSessionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggedOff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEntitlementServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementCategoryListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementServiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementServiceItemType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitlementConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEntitlementService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignedBrokerage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSearchResultRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerSearchResultRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCustomerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreCustomerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkUserToCustomer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkUserToCustomerResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestrictedEntitlementService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyUserEntitlementService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyUserEntitlementServiceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUniqueUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniqueUsernameResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupPropertyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupPropertyListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesSeriesSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesSeriesSearchResultRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerSalesSeriesAuthorizationListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerSalesSeriesAuthorizationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerSalesSeriesAuthorizationListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCustomerSalesSeriesAuthorizationListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerSalesSeriesLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginSettingsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoginSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoginSettingsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginExchangeMemberIdListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginExchangeMemberIdListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginExchangeMemberId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoginExchangeMemberIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoginExchangeMemberIdListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateLoginResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateLoginResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EraseCurrentCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EraseCurrentCredentialsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateLoginSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateLoginSessionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamedEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntityLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntityLinksResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedEntityListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedEntityListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesSeriesListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalesSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoginBillingCustomData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoginBillingCustomDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBillingCustomData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBillingCustomDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_common_1_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginBillingCustomDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_common_1_proto_rawDesc,
			NumEnums:      23,
			NumMessages:   103,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_common_1_proto_goTypes,
		DependencyIndexes: file_proto_common_1_proto_depIdxs,
		EnumInfos:         file_proto_common_1_proto_enumTypes,
		MessageInfos:      file_proto_common_1_proto_msgTypes,
	}.Build()
	File_proto_common_1_proto = out.File
	file_proto_common_1_proto_rawDesc = nil
	file_proto_common_1_proto_goTypes = nil
	file_proto_common_1_proto_depIdxs = nil
}
